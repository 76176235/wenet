Search.setIndex({"docnames": ["UIO", "context", "index", "install", "jit_in_wenet", "lm", "papers", "pretrained_models", "pretrained_models.en", "production", "python_api/modules", "python_api/wenet", "python_api/wenet.branchformer", "python_api/wenet.branchformer.cgmlp", "python_api/wenet.branchformer.encoder", "python_api/wenet.branchformer.encoder_layer", "python_api/wenet.cli", "python_api/wenet.cli.hub", "python_api/wenet.cli.model", "python_api/wenet.cli.transcribe", "python_api/wenet.dataset", "python_api/wenet.dataset.dataset", "python_api/wenet.dataset.kaldi_io", "python_api/wenet.dataset.processor", "python_api/wenet.dataset.wav_distortion", "python_api/wenet.efficient_conformer", "python_api/wenet.efficient_conformer.attention", "python_api/wenet.efficient_conformer.convolution", "python_api/wenet.efficient_conformer.encoder", "python_api/wenet.efficient_conformer.encoder_layer", "python_api/wenet.efficient_conformer.subsampling", "python_api/wenet.squeezeformer", "python_api/wenet.squeezeformer.attention", "python_api/wenet.squeezeformer.conv2d", "python_api/wenet.squeezeformer.convolution", "python_api/wenet.squeezeformer.encoder", "python_api/wenet.squeezeformer.encoder_layer", "python_api/wenet.squeezeformer.positionwise_feed_forward", "python_api/wenet.squeezeformer.subsampling", "python_api/wenet.transducer", "python_api/wenet.transducer.joint", "python_api/wenet.transducer.predictor", "python_api/wenet.transducer.transducer", "python_api/wenet.transformer", "python_api/wenet.transformer.asr_model", "python_api/wenet.transformer.attention", "python_api/wenet.transformer.cmvn", "python_api/wenet.transformer.convolution", "python_api/wenet.transformer.ctc", "python_api/wenet.transformer.decoder", "python_api/wenet.transformer.decoder_layer", "python_api/wenet.transformer.embedding", "python_api/wenet.transformer.encoder", "python_api/wenet.transformer.encoder_layer", "python_api/wenet.transformer.label_smoothing_loss", "python_api/wenet.transformer.positionwise_feed_forward", "python_api/wenet.transformer.subsampling", "python_api/wenet.transformer.swish", "python_api/wenet.utils", "python_api/wenet.utils.checkpoint", "python_api/wenet.utils.cmvn", "python_api/wenet.utils.common", "python_api/wenet.utils.config", "python_api/wenet.utils.context_graph", "python_api/wenet.utils.ctc_util", "python_api/wenet.utils.executor", "python_api/wenet.utils.file_utils", "python_api/wenet.utils.init_model", "python_api/wenet.utils.mask", "python_api/wenet.utils.scheduler", "python_binding", "reference", "requirements", "runtime", "train", "tutorial_aishell", "tutorial_librispeech"], "filenames": ["UIO.md", "context.md", "index.rst", "install.md", "jit_in_wenet.md", "lm.md", "papers.md", "pretrained_models.md", "pretrained_models.en.md", "production.rst", "python_api/modules.rst", "python_api/wenet.rst", "python_api/wenet.branchformer.rst", "python_api/wenet.branchformer.cgmlp.rst", "python_api/wenet.branchformer.encoder.rst", "python_api/wenet.branchformer.encoder_layer.rst", "python_api/wenet.cli.rst", "python_api/wenet.cli.hub.rst", "python_api/wenet.cli.model.rst", "python_api/wenet.cli.transcribe.rst", "python_api/wenet.dataset.rst", "python_api/wenet.dataset.dataset.rst", "python_api/wenet.dataset.kaldi_io.rst", "python_api/wenet.dataset.processor.rst", "python_api/wenet.dataset.wav_distortion.rst", "python_api/wenet.efficient_conformer.rst", "python_api/wenet.efficient_conformer.attention.rst", "python_api/wenet.efficient_conformer.convolution.rst", "python_api/wenet.efficient_conformer.encoder.rst", "python_api/wenet.efficient_conformer.encoder_layer.rst", "python_api/wenet.efficient_conformer.subsampling.rst", "python_api/wenet.squeezeformer.rst", "python_api/wenet.squeezeformer.attention.rst", "python_api/wenet.squeezeformer.conv2d.rst", "python_api/wenet.squeezeformer.convolution.rst", "python_api/wenet.squeezeformer.encoder.rst", "python_api/wenet.squeezeformer.encoder_layer.rst", "python_api/wenet.squeezeformer.positionwise_feed_forward.rst", "python_api/wenet.squeezeformer.subsampling.rst", "python_api/wenet.transducer.rst", "python_api/wenet.transducer.joint.rst", "python_api/wenet.transducer.predictor.rst", "python_api/wenet.transducer.transducer.rst", "python_api/wenet.transformer.rst", "python_api/wenet.transformer.asr_model.rst", "python_api/wenet.transformer.attention.rst", "python_api/wenet.transformer.cmvn.rst", "python_api/wenet.transformer.convolution.rst", "python_api/wenet.transformer.ctc.rst", "python_api/wenet.transformer.decoder.rst", "python_api/wenet.transformer.decoder_layer.rst", "python_api/wenet.transformer.embedding.rst", "python_api/wenet.transformer.encoder.rst", "python_api/wenet.transformer.encoder_layer.rst", "python_api/wenet.transformer.label_smoothing_loss.rst", "python_api/wenet.transformer.positionwise_feed_forward.rst", "python_api/wenet.transformer.subsampling.rst", "python_api/wenet.transformer.swish.rst", "python_api/wenet.utils.rst", "python_api/wenet.utils.checkpoint.rst", "python_api/wenet.utils.cmvn.rst", "python_api/wenet.utils.common.rst", "python_api/wenet.utils.config.rst", "python_api/wenet.utils.context_graph.rst", "python_api/wenet.utils.ctc_util.rst", "python_api/wenet.utils.executor.rst", "python_api/wenet.utils.file_utils.rst", "python_api/wenet.utils.init_model.rst", "python_api/wenet.utils.mask.rst", "python_api/wenet.utils.scheduler.rst", "python_binding.md", "reference.rst", "requirements.txt", "runtime.md", "train.rst", "tutorial_aishell.md", "tutorial_librispeech.md"], "titles": ["Big Data Training: UIO", "Context Biasing", "Welcome to wenet\u2019s documentation!", "Install", "JIT in WeNet", "LM for WeNet", "Papers", "Pretrained Models in WeNet", "Pretrained Models in WeNet", "Production Runtime", "Python API Reference", "wenet package", "wenet.branchformer package", "wenet.branchformer.cgmlp module", "wenet.branchformer.encoder module", "wenet.branchformer.encoder_layer module", "wenet.cli package", "wenet.cli.hub module", "wenet.cli.model module", "wenet.cli.transcribe module", "wenet.dataset package", "wenet.dataset.dataset module", "wenet.dataset.kaldi_io module", "wenet.dataset.processor module", "wenet.dataset.wav_distortion module", "wenet.efficient_conformer package", "wenet.efficient_conformer.attention module", "wenet.efficient_conformer.convolution module", "wenet.efficient_conformer.encoder module", "wenet.efficient_conformer.encoder_layer module", "wenet.efficient_conformer.subsampling module", "wenet.squeezeformer package", "wenet.squeezeformer.attention module", "wenet.squeezeformer.conv2d module", "wenet.squeezeformer.convolution module", "wenet.squeezeformer.encoder module", "wenet.squeezeformer.encoder_layer module", "wenet.squeezeformer.positionwise_feed_forward module", "wenet.squeezeformer.subsampling module", "wenet.transducer package", "wenet.transducer.joint module", "wenet.transducer.predictor module", "wenet.transducer.transducer module", "wenet.transformer package", "wenet.transformer.asr_model module", "wenet.transformer.attention module", "wenet.transformer.cmvn module", "wenet.transformer.convolution module", "wenet.transformer.ctc module", "wenet.transformer.decoder module", "wenet.transformer.decoder_layer module", "wenet.transformer.embedding module", "wenet.transformer.encoder module", "wenet.transformer.encoder_layer module", "wenet.transformer.label_smoothing_loss module", "wenet.transformer.positionwise_feed_forward module", "wenet.transformer.subsampling module", "wenet.transformer.swish module", "wenet.utils package", "wenet.utils.checkpoint module", "wenet.utils.cmvn module", "wenet.utils.common module", "wenet.utils.config module", "wenet.utils.context_graph module", "wenet.utils.ctc_util module", "wenet.utils.executor module", "wenet.utils.file_utils module", "wenet.utils.init_model module", "wenet.utils.mask module", "wenet.utils.scheduler module", "Python Binding", "Reference", "&lt;no title&gt;", "Runtime for WeNet", "How to train models?", "Tutorial on AIShell", "Tutorial on LibriSpeech"], "terms": {"In": [0, 1, 5, 24, 54, 68, 73, 75, 76], "order": [0, 1, 49], "support": [0, 1, 5, 70, 76], "model": [0, 1, 2, 3, 4, 5, 14, 15, 16, 27, 28, 34, 35, 47, 49, 50, 52, 54, 65, 70, 73], "industri": [0, 5, 73], "ten": 0, "million": 0, "hour": [0, 75, 76], "speech": [0, 3, 5, 6, 70, 73, 75, 76], "dataset": [0, 5, 7, 8, 11, 75, 76], "process": [0, 1, 75, 76], "method": [0, 4, 13, 41, 73, 75, 76], "unifi": [0, 5, 49, 53, 73, 76], "ha": [0, 5, 7, 8, 73], "been": [0, 5, 7, 8], "updat": [0, 1, 4], "wenet": [0, 1, 3, 6, 9, 10, 70, 74], "The": [0, 1, 5, 7, 8, 24, 26, 32, 37, 45, 54, 55, 61, 66, 68, 69, 70, 73, 75, 76], "document": 0, "introduc": [0, 70], "from": [0, 1, 5, 24, 54, 66, 73, 75, 76], "follow": [0, 1, 3, 4, 5, 7, 8, 69, 70, 73, 75, 76], "section": [0, 73], "old": [0, 76], "i": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 27, 28, 34, 35, 37, 41, 45, 47, 49, 50, 51, 52, 54, 55, 66, 68, 69, 70, 73, 75, 76], "base": [0, 1, 2, 5, 13, 14, 15, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 68, 69, 73, 75, 76], "pytorch": [0, 4, 7, 8, 49, 73], "": [0, 1, 5, 7, 8, 53, 54, 68, 73, 76], "nativ": 0, "dure": [0, 1, 76], "need": [0, 1, 5, 14, 28, 33, 35, 36, 38, 41, 52, 68], "load": [0, 4], "all": [0, 5, 14, 28, 33, 35, 36, 38, 41, 52, 68, 69, 73], "audio": [0, 38, 70, 75, 76], "path": [0, 1, 4, 66, 75, 76], "correspondingli": 0, "label": [0, 1, 54, 61], "memori": [0, 49, 50, 75, 76], "one": [0, 1, 5, 14, 28, 33, 35, 36, 38, 41, 49, 52, 65, 68, 73, 75, 76], "time": [0, 1, 13, 14, 15, 26, 27, 28, 29, 30, 32, 34, 35, 38, 45, 47, 51, 52, 53, 56, 70, 73, 75, 76], "randomli": [0, 24], "read": [0, 66], "case": [0, 45, 68, 73, 76], "grade": 0, "ultra": 0, "larg": [0, 1, 73, 75, 76], "scale": [0, 26, 32, 45], "eg": 0, "more": [0, 3, 6, 73, 75, 76], "than": [0, 68, 73, 75, 76], "50": [0, 24, 75, 76], "000": 0, "thi": [0, 1, 3, 5, 14, 24, 28, 33, 35, 36, 38, 41, 49, 51, 52, 68, 69, 70, 75, 76], "caus": [0, 75, 76], "fail": [0, 1, 4, 73], "run": [0, 33, 35, 36, 38, 41, 75, 76], "two": [0, 4, 5, 7, 8, 73, 75, 76], "reason": [0, 5, 75, 76], "out": [0, 5, 13, 75, 76], "oom": 0, "physic": 0, "gener": [0, 5, 24, 73], "machin": [0, 75, 76], "difficult": 0, "slow": 0, "down": 0, "perform": [0, 1, 33, 35, 36, 38, 41, 61], "cannot": 0, "us": [0, 1, 3, 4, 7, 8, 13, 14, 15, 24, 27, 28, 29, 34, 35, 36, 47, 49, 50, 52, 53, 68, 70, 73], "file": [0, 1, 66, 70, 75, 76], "cach": [0, 13, 14, 15, 26, 27, 28, 29, 32, 34, 35, 41, 45, 47, 49, 50, 52, 53], "speed": [0, 5], "greatli": 0, "reduc": [0, 7, 8, 48], "inspir": 0, "webdataset": 0, "tfrecord": 0, "redesign": 0, "Its": [0, 51], "core": [0, 5], "idea": 0, "make": [0, 14, 28, 35, 52, 68, 73], "multipl": [0, 70], "small": [0, 14, 28, 35, 52, 73], "1000": 0, "piec": [0, 76], "compress": 0, "packet": 0, "tar": 0, "them": [0, 33, 35, 36, 38, 41, 76], "iterabledataset": 0, "advantag": [0, 73], "onli": [0, 1, 5, 13, 14, 27, 28, 34, 35, 47, 49, 50, 51, 52, 68, 73, 76], "index": [0, 2, 61, 76], "inform": [0, 1], "packag": [0, 2, 10], "maintain": [0, 69], "which": [0, 1, 4, 5, 14, 24, 28, 35, 52, 54, 68, 69, 70, 73, 75, 76], "save": [0, 4, 7, 8, 76], "solv": 0, "problem": [0, 1, 75, 76], "fly": [0, 1, 75, 76], "decompress": 0, "same": [0, 1, 5, 14, 35, 37, 52, 55, 68, 69, 70, 75, 76], "sequenc": [0, 5, 37, 48, 54, 55, 61, 68, 73, 75, 76], "random": [0, 14, 28, 52, 68], "differ": [0, 1, 5, 7, 8, 14, 28, 35, 45, 52, 68, 69, 73], "can": [0, 1, 3, 4, 5, 7, 8, 14, 28, 29, 35, 36, 50, 52, 53, 70, 73, 75, 76], "ensur": [0, 4], "global": [0, 75, 76], "new": [0, 1, 14, 35, 52], "take": [0, 14, 28, 33, 35, 36, 38, 41, 52, 75, 76], "account": [0, 14, 28, 35, 52], "both": [0, 5, 68, 73], "provid": [0, 7, 8, 70, 75, 76], "we": [0, 1, 4, 5, 7, 8, 14, 28, 35, 51, 52, 68, 70, 73, 75, 76], "call": [0, 1, 33, 35, 36, 38, 41, 51, 73, 75, 76], "shown": [0, 5, 76], "figur": 0, "below": [0, 5, 66], "some": [0, 1, 14, 28, 35, 52, 54, 75, 76], "necessari": [0, 1, 68], "explan": 0, "about": [0, 75, 76], "abov": [0, 1, 3, 70], "mode": [0, 33, 68, 75, 76], "local": [0, 5, 75, 76], "requir": [0, 3, 4, 5, 7, 8, 14, 28, 35, 51, 52, 70, 73, 75, 76], "must": [0, 15, 29, 53, 75, 76], "sort": [0, 76], "kaldi": [0, 1, 5, 76], "style": [0, 5, 14, 28, 35, 52, 75, 76], "wav": [0, 1, 5, 70], "scp": [0, 5, 75, 76], "text": [0, 1, 5, 75, 76], "It": [0, 1, 5, 73, 75, 76], "befor": [0, 1, 4, 29, 36, 49, 50, 53, 76], "share": [0, 73, 75, 76], "network": [0, 7, 8, 14, 28, 35, 52], "cloud": 0, "storag": 0, "txt": [0, 1, 3, 5, 70, 75, 76], "ar": [0, 1, 5, 8, 14, 24, 28, 35, 37, 52, 54, 55, 70, 73, 75, 76], "store": 0, "singl": [0, 1, 50], "also": [0, 1, 5, 70, 73, 75, 76], "adopt": [0, 1, 73], "implement": [0, 14, 28, 35, 52], "practic": [0, 1, 73], "flexibl": 0, "easier": 0, "expand": 0, "debug": 0, "exampl": [0, 1, 5, 7, 8, 61, 68, 70, 75, 76], "def": 0, "read_dataset": 0, "filenam": 0, "batch_siz": [0, 41, 68, 75, 76], "tf": 0, "tfrecorddataset": 0, "map": [0, 75, 76], "_parse_image_funct": 0, "num_parallel_cal": 0, "experiment": 0, "autotun": 0, "shuffl": 0, "500": [0, 76], "batch": [0, 13, 14, 15, 26, 27, 28, 29, 30, 32, 34, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 61, 68], "drop_remaind": 0, "true": [0, 1, 13, 14, 26, 27, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 70, 75, 76], "repeat": 0, "prefetch": 0, "buffer_s": 0, "return": [0, 1, 13, 14, 15, 24, 26, 27, 28, 29, 30, 32, 34, 35, 37, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 68], "refer": [0, 2, 4, 13, 70, 75, 76], "dataflow": 0, "includ": [0, 1, 5, 49, 70], "modul": [0, 2, 4, 12, 16, 20, 25, 31, 39, 43, 58, 73], "token": [0, 1, 49, 61], "convert": 0, "specifi": [0, 1, 70, 76], "unit": [0, 1, 5, 13, 37, 49, 55, 70, 75, 76], "char": [0, 5, 75, 76], "bpe": [0, 5, 76], "filter": [0, 38], "unqualifi": 0, "resampl": 0, "option": [0, 3, 5, 15, 24, 68, 70], "comput": [0, 1, 14, 15, 26, 27, 28, 29, 32, 33, 34, 35, 36, 38, 41, 45, 47, 50, 51, 52, 53, 54, 68, 73, 75, 76], "_": [0, 1, 5, 70, 73, 75, 76], "fbank": 0, "featur": [0, 15, 26, 29, 32, 45, 46, 50, 53], "extract": 0, "spec": 0, "augment": 0, "enhanc": 0, "disrupt": 0, "organ": [0, 5, 75, 76], "pad": [0, 13, 14, 15, 27, 28, 29, 33, 34, 41, 45, 47, 48, 49, 52, 53, 54, 61, 68], "what": [0, 4, 5], "There": [0, 5], "sever": [0, 14, 28, 35, 51, 52, 73, 75, 76], "paramet": [0, 13, 14, 15, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 66, 68, 69, 70, 75, 76], "note": [0, 3, 69, 70], "first": [0, 5, 70, 73], "buffer": 0, "size": [0, 7, 8, 13, 14, 15, 26, 27, 28, 29, 32, 34, 35, 36, 38, 45, 47, 49, 50, 51, 52, 53, 54, 56, 68, 73, 75, 76], "recommend": 0, "larger": 0, "number": [0, 14, 24, 26, 28, 32, 37, 45, 49, 52, 54, 55, 68, 69, 75, 76], "contain": [0, 1, 49, 68, 70, 75, 76], "each": [0, 1, 24, 29, 36, 37, 49, 50, 53, 55, 75, 76], "equival": 0, "between": [0, 1, 15, 45, 54, 75], "increas": [0, 51], "you": [0, 3, 4, 5, 7, 8, 70, 73, 75, 76], "set": [0, 14, 24, 28, 52, 68, 73, 75, 76], "1500": 0, "accord": [0, 1, 5], "frame": [0, 1, 5, 48, 73], "oper": [0, 33], "veri": [0, 5, 14, 28, 35, 52, 70, 73], "import": [0, 70], "improv": [0, 1], "dataload": [0, 75], "pre": 0, "granular": 0, "final": [0, 1, 5, 70, 73, 76], "default": [0, 14, 24, 28, 52, 68], "2": [0, 1, 5, 6, 13, 14, 15, 26, 28, 29, 30, 32, 35, 38, 41, 45, 49, 52, 53, 54, 61, 68, 70, 73], "due": 0, "exist": 0, "mai": [0, 1, 5, 68, 75, 76], "alreadi": [0, 75, 76], "so": [0, 5, 51, 61, 70, 73, 75, 76], "real": [0, 68], "when": [0, 1, 4, 45, 68, 70, 73, 75, 76], "insuffici": 0, "next": [0, 1, 14, 28, 35, 52], "fill": 0, "At": 0, "block": [0, 29, 36, 45, 49, 50, 53, 68], "word": [0, 1, 5, 70, 73, 75, 76], "part": [0, 5, 26, 32, 45, 54, 68, 73, 76], "becaus": 0, "previou": [0, 73], "still": 0, "therefor": [0, 5, 73], "avoid": [0, 1, 68, 73], "present": 0, "have": [0, 1, 3, 5, 68, 75, 76], "verifi": 0, "accuraci": [0, 1, 61, 73], "200": 0, "10000": [0, 51], "respect": 0, "cer": 0, "4": [0, 5, 7, 8, 14, 24, 28, 30, 35, 38, 45, 49, 52, 56, 61, 68], "61": 0, "63": 0, "67": 0, "espnet": [0, 76], "similar": 0, "structur": [0, 5, 8, 75, 76], "configur": 0, "thei": [0, 1, 75, 76], "achiev": [0, 73], "recognit": [0, 1, 3, 5, 6, 70, 73, 75, 76], "rate": [0, 14, 24, 26, 28, 29, 30, 32, 35, 36, 37, 45, 49, 50, 51, 52, 53, 54, 55, 56, 69, 73, 75, 76], "show": [0, 5, 73, 75, 76], "correct": 0, "And": [0, 3, 5, 7, 8], "observ": 0, "util": [0, 11, 76], "gpu": [0, 75, 76], "80": [0, 24, 35, 38], "90": 0, "indic": [0, 1, 68, 75], "effici": [0, 15], "high": [0, 69], "For": [0, 5, 7, 8, 51, 70, 73, 75, 76], "detail": [0, 4, 5, 70, 75, 76], "pleas": [0, 3, 5, 7, 70, 73, 75, 76], "http": [0, 3, 4, 5, 7, 8, 13, 26, 32, 41, 45, 51, 70, 76], "github": [0, 3, 5, 70, 75, 76], "com": [0, 3, 5, 70], "e2": [0, 3, 5, 70, 76], "blob": [0, 5, 70], "main": [0, 5, 70], "s0": [0, 75, 76], "sh": [0, 5, 75, 76], "prepar": [0, 5], "three": [0, 14, 28, 35, 52], "relat": [0, 5, 76], "script": [0, 4, 75, 76], "py": [0, 4, 5, 70, 73, 75, 76], "train_data": [0, 76], "cv_data": [0, 76], "test_data": [0, 76], "list": [0, 1, 14, 24, 28, 35, 41, 49, 61, 70, 73, 75, 76], "data_typ": [0, 76], "symbol_t": [0, 76], "python": [0, 2, 4, 7, 8, 71, 73, 76], "bin": [0, 4, 75, 76], "gpu_id": [0, 76], "config": [0, 58, 61, 75, 76], "train_config": [0, 76], "dict": [0, 5, 24, 75, 76], "feat_dir": 0, "train_set": [0, 76], "dev": [0, 76], "If": [0, 1, 3, 4, 26, 32, 45, 50, 68, 70, 75, 76], "type": [0, 4, 13, 14, 15, 26, 27, 28, 29, 30, 32, 34, 35, 36, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 61, 68, 73, 75, 76], "format": [0, 5, 66, 70], "kei": [0, 14, 15, 26, 28, 29, 32, 35, 45, 52, 53, 75, 76], "bac009s0002w0122": [0, 75], "export": [0, 1, 4, 7, 8, 28, 73], "asr": [0, 1, 2, 70, 73, 75, 76], "openslr": [0, 7, 8, 75, 76], "33": [0, 75], "data_aishel": [0, 5, 75], "s0002": [0, 75], "\u800c\u5bf9\u697c\u5e02\u6210\u4ea4\u6291\u5236\u4f5c\u7528\u6700\u5927\u7684\u9650\u8d2d": [0, 75], "bac009s0002w0123": [0, 75], "\u4e5f\u6210\u4e3a\u5730\u65b9\u653f\u5e9c\u7684\u773c\u4e2d\u9489": [0, 75], "bac009s0002w0124": [0, 75], "\u81ea\u516d\u6708\u5e95\u547c\u548c\u6d69\u7279\u5e02\u7387\u5148\u5ba3\u5e03\u53d6\u6d88\u9650\u8d2d\u540e": [0, 75], "line": [0, 1, 75, 76], "json": [0, 75, 76], "serial": 0, "string": 0, "field": [0, 75, 76], "1": [0, 1, 5, 13, 14, 15, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 45, 47, 49, 50, 51, 52, 53, 54, 56, 61, 68, 69, 70, 73], "maryland": 0, "binbinzhang": 0, "code": [0, 1, 4, 5, 7, 8, 73, 76], "s3": 0, "raw_wav": [0, 75], "shards_000000000": 0, "gz": [0, 76], "shards_000000001": 0, "shards_000000002": 0, "oss": 0, "examplebucket": 0, "cn": [0, 7, 8], "hangzhou": 0, "aliyunc": 0, "exampledir": 0, "q1": 0, "how": [0, 1, 2, 4, 73, 75, 76], "distribut": [0, 54], "partit": 0, "rank": [0, 76], "num": [0, 76], "worker": 0, "segment": 0, "class": [0, 5, 13, 14, 15, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 69], "distributedsampl": 0, "__init__": 0, "self": [0, 15, 28, 29, 36, 45, 49, 50, 53, 54], "epoch": [0, 65, 75, 76], "set_epoch": 0, "sampl": [0, 24], "rang": [0, 5, 70], "len": [0, 61, 70], "world_siz": [0, 76], "worker_id": 0, "num_work": [0, 76], "q2": 0, "deal": 0, "unbalanc": 0, "join": [0, 4], "handl": [0, 73], "imbal": 0, "alloc": 0, "applic": [1, 3, 5], "effect": 1, "commonli": 1, "better": [1, 73, 75, 76], "uniqu": 1, "low": 1, "contextu": [1, 70], "inject": 1, "prior": 1, "knowledg": 1, "an": [1, 2, 5, 57, 68, 70, 73, 75, 76], "system": [1, 73, 76], "infer": [1, 28, 41, 73, 75, 76], "user": [1, 7, 8], "favorit": 1, "song": 1, "contact": [1, 5], "app": 1, "locat": 1, "convent": [1, 54], "build": [1, 2, 5, 76], "n": [1, 3, 5, 24, 70, 73, 75, 76], "gram": [1, 5, 76], "finit": 1, "state": [1, 48], "transduc": [1, 11, 61], "fst": [1, 5, 70, 76], "phrase": 1, "compos": [1, 5], "decod": [1, 5, 14, 28, 35, 43, 45, 50, 52, 68, 70, 73, 75, 76], "help": 1, "bia": [1, 27, 33, 34, 41, 47], "result": [1, 7, 8, 14, 28, 35, 52, 68, 70, 73, 75, 76], "toward": 1, "thu": 1, "certain": 1, "scenario": [1, 5, 51, 73], "score": [1, 26, 32, 45, 49, 68, 70, 73], "p": [1, 5, 26, 40, 76], "c": [1, 4, 73, 75, 76], "mathbf": 1, "y": [1, 49, 73], "interpol": 1, "x": [1, 13, 14, 15, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 61, 68, 73, 76], "shallow": 1, "fusion": 1, "mathrm": 1, "arg": [1, 4, 57, 61, 65, 73], "max": [1, 24, 68], "log": [1, 5, 48, 61, 73], "lambda": 1, "where": [1, 14, 26, 28, 30, 32, 35, 45, 52, 56, 73], "tunabl": [1, 75, 76], "hyperparamet": 1, "control": [1, 14, 28, 35, 52, 70], "much": [1, 4, 73], "lm": [1, 2, 3, 9, 70], "influenc": 1, "overal": [1, 73], "want": [1, 3, 4, 75, 76], "cat": [1, 76], "charact": [1, 48, 75], "0": [1, 5, 6, 7, 8, 13, 14, 15, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 45, 47, 48, 49, 51, 52, 53, 54, 56, 61, 68, 69, 70], "25": 1, "construct": [1, 57], "correspond": [1, 5, 7, 8, 51], "match": 1, "reward": 1, "obtain": 1, "artifici": 1, "boost": [1, 75, 76], "earli": 1, "do": [1, 4, 5, 14, 28, 35, 38, 52, 68, 75, 76], "entir": 1, "add": [1, 40, 51, 61, 69], "special": [1, 14, 28, 35, 52], "failur": 1, "arc": 1, "remov": 1, "record": [1, 75, 76], "easili": [1, 73, 75, 76], "determin": 1, "boundari": 1, "hot": 1, "That": 1, "after": [1, 14, 28, 29, 36, 49, 50, 52, 53, 69, 75, 76], "succe": 1, "other": [1, 5, 50, 54, 70, 73, 75, 76], "start": [1, 51, 68, 75, 76], "int": [1, 13, 14, 15, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 68, 69, 70], "contextgraph": 1, "getnextst": 1, "cur_stat": 1, "word_id": 1, "float": [1, 13, 14, 15, 24, 26, 28, 29, 30, 32, 35, 36, 37, 38, 40, 41, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 69, 70], "bool": [1, 13, 14, 15, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 70], "is_start_boundari": 1, "is_end_boundari": 1, "next_stat": 1, "travers": 1, "current": [1, 14, 28, 35, 45, 52, 68, 70, 73], "arciter": 1, "stdfst": 1, "aiter": 1, "graph_": 1, "done": [1, 76], "const": 1, "stdarc": 1, "valu": [1, 14, 15, 24, 26, 28, 29, 32, 35, 41, 45, 49, 52, 53, 54, 61, 68], "ilabel": 1, "backoff": 1, "might": 1, "cover": 1, "weight": [1, 15, 26, 32, 33, 45], "els": [1, 70], "nextstat": 1, "check": [1, 4, 75, 76], "whether": [1, 5, 38, 49, 68, 70], "One": 1, "break": 1, "append": 1, "output": [1, 14, 15, 26, 27, 28, 29, 30, 32, 34, 35, 37, 38, 41, 45, 47, 49, 50, 52, 53, 54, 55, 56, 70, 73, 75, 76], "chang": [1, 5, 24, 73, 75, 76], "function": [1, 4, 5, 24, 33, 35, 36, 37, 38, 41, 51, 55, 57, 61, 68, 75, 76], "end": [1, 2, 5, 6, 70, 73, 75, 76], "posit": [1, 15, 24, 26, 28, 29, 30, 32, 37, 38, 45, 49, 51, 52, 53, 55, 56], "insert": 1, "tag": 1, "bag": 1, "lattic": 1, "faster": [1, 73], "onlin": 1, "modifi": [1, 4, 5, 38], "cc": [1, 5, 7, 8, 73], "tlg": [1, 5, 70, 76], "input": [1, 14, 15, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 45, 47, 49, 50, 51, 52, 53, 55, 56, 68, 73, 75, 76], "decid": 1, "processemit": 1, "processnonemit": 1, "elem": 1, "e_next": 1, "findoraddtoken": 1, "tot_cost": 1, "tok": 1, "null": 1, "begin": [1, 76], "fals": [1, 14, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 45, 47, 49, 50, 51, 52, 53, 54, 70, 75, 76], "context_scor": [1, 70], "context_graph_": 1, "olabel": 1, "val": 1, "context_st": 1, "graph_cost": 1, "forwardlink": 1, "next_tok": 1, "put": [1, 5], "head": [1, 14, 15, 26, 28, 29, 32, 35, 45, 49, 52, 53], "link": [1, 8], "forwardlinkt": 1, "ac_cost": 1, "accumul": [1, 5], "lead": 1, "cost": [1, 73, 75, 76], "too": 1, "void": 1, "latticefasterdecodertpl": 1, "pruneforwardlink": 1, "int32": [1, 61], "frame_plus_on": 1, "extra_costs_chang": 1, "links_prun": 1, "basefloat": 1, "delta": 1, "link_extra_cost": 1, "extra_cost": 1, "acoustic_cost": 1, "bracket": 1, "mean": [1, 13, 14, 15, 26, 27, 28, 29, 32, 34, 35, 45, 46, 47, 52, 53, 54, 66, 68, 70, 75, 76], "link_exta_cost": 1, "best": [1, 5, 70, 73, 75, 76], "through": [1, 75, 76], "sourc": [1, 13, 14, 15, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 65, 66, 68, 69], "destin": 1, "context_path": 1, "split": [1, 5], "symbol": [1, 66, 70, 73, 75, 76], "tabl": [1, 70, 72], "oov": 1, "cd": [1, 3, 70, 75, 76], "home": [1, 75], "runtim": [1, 2, 3, 5, 7, 8, 70], "libtorch": [1, 3, 70, 73, 75, 76], "glog_logtostderr": 1, "glog_v": 1, "wav_path": [1, 75, 76], "docker_resourc": 1, "test": [1, 5], "model_dir": [1, 4, 70, 76], "decoder_main": 1, "chunk_siz": [1, 14, 26, 28, 32, 35, 45, 52, 68], "model_path": 1, "zip": [1, 4, 5, 7, 8, 70, 76], "3": [1, 3, 5, 26, 28, 45, 61, 68, 70, 73], "unit_path": 1, "tee": 1, "tansform": 2, "toolkit": [2, 6, 70], "instal": [2, 75, 76], "prebuilt": 2, "train": [2, 4, 5, 7, 8, 13, 14, 15, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 68, 69, 73], "deploy": 2, "tutori": [2, 74], "librispeech": [2, 5, 7, 8, 74], "aishel": [2, 5, 7, 8, 74], "pretrain": [2, 70, 74, 76], "big": [2, 74, 75, 76], "data": [2, 5, 54, 74], "uio": [2, 74], "product": [2, 4, 5, 6, 26, 32, 45, 70], "context": [2, 9, 13, 14, 26, 27, 28, 32, 34, 35, 45, 47, 52, 68, 70, 73], "bias": [2, 9, 70], "jit": [2, 7, 8, 9, 73], "bind": [2, 71], "paper": [2, 26, 32, 45, 71, 75, 76], "api": [2, 49, 53, 70, 71], "search": [2, 5, 73, 75, 76], "page": 2, "just": [3, 5, 14, 28, 35, 51, 52, 53, 73, 75, 76], "pip": 3, "6": [3, 28, 49, 52, 56, 61, 70], "pip3": [3, 70], "wenetruntim": [3, 70], "see": [3, 4, 5, 7, 8, 45, 51, 68, 73, 75, 76], "doc": [3, 70], "usag": 3, "clone": [3, 70], "repo": 3, "git": [3, 70], "conda": 3, "io": [3, 4], "en": [3, 4, 7, 8, 70, 76], "latest": [3, 4], "miniconda": 3, "html": [3, 4], "creat": [3, 68], "env": 3, "8": [3, 5, 24, 56, 61, 75, 76], "activ": [3, 27, 34, 37, 40, 41, 47, 48, 55, 57, 61, 73], "r": 3, "x86": [3, 7, 8, 73], "languag": [3, 4, 5, 7, 8, 70, 75, 76], "otherwis": [3, 76], "ignor": [3, 33, 35, 36, 38, 41, 54, 61, 68], "step": [3, 41, 49, 68, 69, 75, 76], "cmake": 3, "14": 3, "mkdir": [3, 5, 76], "dgraph_tool": 3, "ON": [3, 76], "platform": 3, "o": [3, 4], "our": [4, 7, 8, 73, 76], "directli": [4, 5, 7, 8, 73], "torch": [4, 13, 14, 15, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 68, 70, 72, 73, 75, 76], "essenti": 4, "deploi": 4, "resourc": [4, 76], "introduct": [4, 73], "TO": [4, 76], "torchscript": [4, 70], "A": [4, 5, 24, 68, 76], "IN": [4, 76], "deep": 4, "dive": 4, "research": [4, 5], "To": [4, 5, 68], "try": [4, 75, 76], "stage": [4, 69], "should": [4, 14, 28, 33, 35, 36, 38, 41, 52, 54, 68, 69, 73], "satisfi": 4, "script_model": 4, "init": [4, 76], "principl": [4, 5], "taken": [4, 14, 28, 35, 52, 54], "consider": 4, "contribut": 4, "especi": [4, 5], "subclass": [4, 33, 35, 36, 38, 41], "nn": [4, 14, 28, 29, 35, 36, 37, 38, 49, 50, 52, 53, 55, 56, 75, 76], "forward": [4, 13, 14, 15, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 73], "know": 4, "allow": [4, 68], "disallow": 4, "tensor": [4, 13, 14, 15, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 68], "unsupport": 4, "attribut": 4, "coverag": 4, "explicit": 4, "possibl": [4, 76], "forc": 4, "typeguard": [4, 72], "readthedoc": 4, "userguid": 4, "statist": [5, 75, 76], "wfst": 5, "framework": [5, 73], "custom": [5, 56, 75, 76], "why": 5, "question": 5, "mani": 5, "peopl": [5, 75, 76], "ask": [5, 75, 76], "now": 5, "rnn": [5, 41], "transform": [5, 11, 14, 26, 28, 32, 35, 61, 73, 75, 76], "full": [5, 14, 28, 52, 68, 76], "swing": 5, "doe": [5, 53, 75, 76], "go": [5, 75, 76], "backward": 5, "simpl": [5, 73, 75, 76], "matur": 5, "complet": 5, "tool": [5, 70, 75, 76], "ani": [5, 66, 75, 76], "amount": 5, "corpu": [5, 76], "fast": [5, 73], "hotfix": 5, "easi": 5, "wide": 5, "actual": [5, 14, 28, 35, 52, 75, 76], "second": [5, 70], "sinc": [5, 7, 8, 33, 35, 36, 38, 41, 73], "work": [5, 14, 28, 35, 52, 68, 73, 75, 76], "hard": 5, "abandon": 5, "tradit": [5, 73], "complex": 5, "technologi": 5, "back": 5, "standard": [5, 15, 54, 73], "power": 5, "solut": 5, "bug": 5, "fix": [5, 14, 28, 52, 68], "replac": 5, "person": 5, "like": [5, 14, 24, 28, 35, 52, 66, 75, 76], "goal": 5, "readi": [5, 70], "prioriti": 5, "draw": 5, "pure": 5, "As": 5, "describ": [5, 41, 73], "choos": 5, "your": [5, 75, 76], "whole": [5, 14, 28, 35, 51, 52, 73, 75, 76], "bellow": 5, "pictur": [5, 73], "wai": [5, 51, 73], "without": [5, 56, 75], "ctc": [5, 43, 73, 75, 76], "prefix": [5, 73, 75, 76], "beam": [5, 73, 75, 76], "With": [5, 73], "graph": 5, "t": [5, 14, 28, 35, 40, 45, 52, 68, 70, 73], "lexicon": [5, 76], "l": [5, 37, 45, 55, 68, 76], "g": [5, 24, 54, 75, 76], "typic": [5, 14, 28, 35, 52, 73, 76], "chines": [5, 7, 70], "english": [5, 70, 76], "its": [5, 68], "\u6211\u4eec": 5, "\u6211": 5, "\u4eec": 5, "appl": 5, "five": 5, "letter": 5, "e": [5, 24, 40, 54, 73, 75, 76], "phonem": 5, "pronunci": 5, "purpos": 5, "name": [5, 75, 76], "compil": 5, "represent": 5, "viterbi": 5, "algorithm": [5, 75, 76], "eas": 5, "keep": [5, 69], "independ": 5, "migrat": 5, "directori": [5, 70, 76], "minim": 5, "remain": 5, "origin": [5, 14, 24, 35, 52, 75, 76], "glog": 5, "meet": [5, 75, 76], "lint": 5, "wrap": 5, "latticefasterdecod": 5, "blank": [5, 61, 75, 76], "skip": [5, 75, 76], "up": [5, 69], "addit": [5, 29, 53, 73], "arpa2fst": 5, "fstdeterminizestar": 5, "fsttablecompos": 5, "fstminimizeencod": 5, "built": 5, "box": 5, "get": [5, 24, 51, 70, 73, 75, 76], "consist": 5, "gain": [5, 24], "10": [5, 61, 76], "aishell2": [5, 7, 8], "here": [5, 7, 8, 14, 28, 35, 52, 53, 73, 75, 76], "dictionari": 5, "7": [5, 61, 75], "unit_fil": [5, 76], "cp": [5, 76], "prepare_dict": [5, 76], "resource_aishel": 5, "filter_scp": 5, "pl": 5, "transcript": [5, 75, 76], "aishell_transcript_v0": 5, "aishell_train_lm": 5, "compile_lexicon_token_fst": [5, 76], "tmp": [5, 76], "lang": [5, 70, 76], "make_tlg": [5, 76], "lang_test": [5, 76], "exit": [5, 76], "nj": [5, 76], "16": [5, 76], "15": [5, 24, 27, 28, 34, 47, 52], "lattice_beam": [5, 76], "5": [5, 14, 15, 35, 38, 61, 68, 69, 70], "max_act": [5, 76], "7000": [5, 76], "blank_skip_thresh": [5, 76], "98": [5, 76], "ctc_weight": [5, 76], "rescoring_weight": [5, 76], "fst_path": [5, 76], "dict_path": [5, 76], "dir": [5, 75, 76], "lm_with_runtim": 5, "orient": 6, "stream": [6, 14, 28, 35, 51, 52, 68, 73], "non": [6, 7, 66, 68, 73, 76], "accept": 6, "interspeech": 6, "2021": 6, "2022": 6, "facilit": [7, 8], "checkpoint": [7, 8, 58, 75, 76], "suffix": [7, 8], "pt": [7, 8, 75, 76], "reproduc": [7, 8], "publish": [7, 8], "continu": [7, 8, 70, 73, 75, 76], "android": [7, 8, 73], "quantiz": [7, 8], "traffic": [7, 8], "BY": [7, 8], "org": [7, 8, 13, 26, 32, 41, 45, 51, 76], "12": [7, 8, 14, 35, 76], "visit": 7, "download": [7, 8, 70], "contributor": [7, 8], "conform": [7, 8, 14, 26, 27, 28, 29, 34, 35, 47, 52, 53, 57, 73, 75, 76], "gigaspeech": [7, 8, 75, 76], "multi_cn": [7, 8], "wenetspeech": [7, 8, 75, 76], "given": [8, 70, 76], "subpackag": 10, "branchform": 11, "submodul": 11, "cli": 11, "efficient_conform": 11, "squeezeform": 11, "cgmlp": [12, 15], "convolutionalgatingmlp": [12, 13, 15], "convolutionalspatialgatingunit": [12, 13], "encod": [12, 15, 25, 26, 29, 30, 31, 32, 36, 38, 43, 45, 49, 50, 51, 53, 56, 68, 73, 75, 76], "branchformerencod": [12, 14], "encoder_lay": [12, 25, 31, 43], "branchformerencoderlay": [12, 15], "mlp": 13, "convolut": [13, 14, 15, 25, 28, 29, 30, 31, 35, 36, 38, 43, 52, 53, 56, 68], "gate": 13, "definit": [13, 14, 15, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 45, 47, 49, 50, 52, 53, 55, 56], "openreview": 13, "net": 13, "forum": 13, "id": [13, 48, 49, 54, 61, 73, 75, 76], "ra": 13, "zvvzlyii": 13, "arxiv": [13, 26, 32, 41, 45, 51], "ab": [13, 26, 32, 45, 51, 76], "2105": 13, "08050": 13, "linear_unit": [13, 28, 49, 52], "kernel_s": [13, 27, 33, 34, 38, 47], "dropout_r": [13, 14, 15, 26, 28, 29, 30, 32, 36, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55, 56], "use_linear_after_conv": [13, 14], "gate_activ": [13, 14], "str": [13, 14, 15, 27, 28, 33, 34, 35, 40, 41, 47, 49, 52, 61, 68, 70], "causal": [13, 14, 27, 28, 34, 35, 47, 52, 68, 73], "mask": [13, 14, 15, 24, 26, 27, 28, 29, 30, 32, 34, 36, 38, 45, 47, 49, 50, 52, 53, 54, 56, 58], "tupl": [13, 14, 15, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 41, 45, 47, 49, 50, 51, 52, 53, 56, 61], "channel": [13, 27, 34, 38, 47], "mask_pad": [13, 15, 27, 29, 34, 36, 38, 47, 53], "fake": [13, 15, 26, 27, 29, 32, 34, 45, 47, 53], "Not": 13, "yet": 13, "left": [13, 14, 27, 28, 34, 35, 47, 49, 52, 68, 73], "cache_t": [13, 26, 27, 32, 34, 45, 47], "mea": [13, 27, 34, 47], "spatial": 13, "csgu": 13, "espnet_initialization_fn": 13, "input_s": [14, 28, 35, 38, 52], "output_s": [14, 28, 35, 41, 52], "256": [14, 28, 35, 38, 52], "use_attn": 14, "attention_head": [14, 28, 35, 49, 52], "attention_layer_typ": 14, "rel_selfattn": [14, 52], "pos_enc_layer_typ": [14, 28, 35, 52], "rel_po": [14, 28, 35, 52], "use_cgmlp": 14, "cgmlp_linear_unit": 14, "2048": [14, 28, 49, 52], "cgmlp_conv_kernel": 14, "31": [14, 35], "ident": 14, "merge_method": [14, 15], "concat": [14, 15], "cgmlp_weight": [14, 15], "attn_branch_drop_r": [14, 15], "num_block": [14, 28, 35, 49, 52], "positional_dropout_r": [14, 28, 49, 52], "attention_dropout_r": [14, 28, 35, 52], "input_lay": [14, 28, 49, 52], "none": [14, 15, 24, 26, 28, 29, 33, 35, 36, 41, 49, 50, 51, 52, 53, 66, 69], "conv2d": [14, 28, 31, 52], "padding_idx": [14, 54], "stochastic_depth_r": [14, 15], "static_chunk_s": [14, 28, 35, 52, 68], "use_dynamic_chunk": [14, 28, 35, 52, 68], "global_cmvn": [14, 28, 35, 52, 76], "use_dynamic_left_chunk": [14, 28, 35, 52, 68], "ilen": 14, "decoding_chunk_s": [14, 28, 35, 52, 68, 76], "num_decoding_left_chunk": [14, 26, 28, 32, 35, 45, 52, 68], "calcul": [14, 48, 54, 61, 75, 76], "propag": 14, "b": [14, 28, 35, 37, 40, 41, 48, 51, 52, 55, 61, 68], "d": [14, 28, 37, 48, 52, 55, 61, 68, 76], "length": [14, 28, 30, 38, 48, 49, 51, 52, 54, 56, 68], "chunk": [14, 28, 35, 52, 68, 73, 76], "dynam": [14, 28, 35, 52, 68, 76], "subsampl": [14, 25, 28, 31, 35, 43, 52, 73], "subsample_r": [14, 28, 35, 52], "forward_chunk": [14, 28, 35, 52], "offset": [14, 28, 30, 35, 38, 51, 52, 56, 68], "required_cache_s": [14, 28, 35, 52], "att_cach": [14, 15, 28, 29, 35, 36, 52, 53], "cnn_cach": [14, 15, 28, 29, 35, 36, 52, 53], "att_mask": [14, 28, 35, 52], "dtype": [14, 15, 26, 27, 28, 29, 32, 33, 34, 35, 36, 38, 45, 47, 49, 52, 53, 61, 68], "shape": [14, 24, 28, 35, 45, 49, 51, 52, 54, 68], "mel": [14, 35, 52], "dim": [14, 28, 35, 37, 41, 49, 51, 52, 55], "right_context": [14, 35, 52, 68, 73], "stamp": [14, 28, 35, 52, 73], "compuat": [14, 28, 35, 52], "histori": [14, 28, 35, 41, 52, 68, 73], "attent": [14, 15, 25, 28, 29, 31, 35, 36, 43, 49, 50, 51, 52, 53, 68, 73, 75, 76], "elay": [14, 28, 35, 52], "cache_t1": [14, 15, 28, 29, 35, 52, 53], "d_k": [14, 15, 26, 28, 29, 32, 35, 45, 52, 53], "hidden": [14, 28, 35, 37, 48, 49, 52, 55], "cnn_modul": [14, 28, 35, 52], "cache_t2": [14, 15, 28, 29, 35, 52, 53], "cnn": [14, 28, 35, 52, 73], "lorder": [14, 28, 35, 52], "depend": [14, 35, 52, 68, 70, 75, 76], "forward_chunk_by_chunk": [14, 28, 35, 52], "fashion": [14, 28, 35, 51, 52], "pai": [14, 28, 35, 52], "thing": [14, 28, 35, 52, 70], "layer": [14, 15, 26, 28, 29, 30, 32, 35, 36, 37, 41, 45, 49, 50, 52, 53, 55, 56, 73], "howev": [14, 28, 35, 52, 73], "don": [14, 28, 35, 52], "right": [14, 28, 35, 49, 52, 73], "overlap": [14, 28, 35, 52, 73], "instead": [14, 28, 33, 35, 36, 38, 41, 52], "even": [14, 28, 35, 52], "though": [14, 28, 35, 52], "wast": [14, 28, 35, 52], "fraction": [14, 28, 35, 52, 73], "covolut": [14, 28, 35, 52], "tricki": [14, 28, 35, 52], "complic": [14, 28, 35, 52], "sequenti": [14, 28, 35, 52], "stack": [14, 28, 35, 52], "rewrit": [14, 28, 35, 52], "prefer": [14, 28, 35, 52], "max_len": [14, 28, 35, 46, 51, 52, 68], "attn": 15, "dimens": [15, 29, 30, 36, 38, 49, 50, 51, 53, 56, 76], "dropout": [15, 26, 29, 30, 32, 35, 36, 37, 41, 45, 49, 50, 51, 53, 55, 56], "probabl": [15, 24, 54], "learned_av": 15, "fixed_av": 15, "branch": [15, 68], "drop": 15, "stochast": 15, "depth": 15, "pos_emb": [15, 26, 29, 32, 36, 45, 53], "union": 15, "conv": [15, 29, 38, 53], "cnn_cahc": [15, 29, 53], "hub": 16, "transcrib": 16, "kaldi_io": 20, "processor": 20, "wav_distort": 20, "amp2db": [20, 24], "db2amp": [20, 24], "distort": [20, 24], "distort_chain": [20, 24], "distort_wav_conf": [20, 24], "distort_wav_conf_and_sav": [20, 24], "generate_amp_mask": [20, 24], "make_amp_mask": [20, 24], "make_fence_distort": [20, 24], "make_gain_db": [20, 24], "make_jag_distort": [20, 24], "make_max_distort": [20, 24], "make_poly_distort": [20, 24], "make_quad_distort": [20, 24], "amp": 24, "db": 24, "func": 24, "waveform": 24, "point": 24, "level": [24, 51, 70, 73], "wavefrom": 24, "distort_typ": 24, "distort_conf": 24, "wav_in": 24, "wav_out": 24, "mask_num": 24, "amplitud": 24, "domain": 24, "100db": 24, "0db": 24, "slot": 24, "defin": [24, 33, 35, 36, 38, 41, 69, 76], "100": [24, 76], "65": 24, "60": 24, "30": 24, "db_mask": 24, "conf": [24, 75, 76], "fenc": 24, "maxium": 24, "while": [24, 33, 35, 36, 38, 41, 69], "seper": 24, "neget": 24, "mask_numb": 24, "max_db": 24, "could": [24, 45, 68, 75, 76], "appli": [24, 45, 48, 49, 51, 54, 68, 75, 76], "jag": 24, "ploynomi": 24, "f": [24, 76], "m": 24, "groupedrelpositionmultiheadedattent": [25, 26], "convolutionmodul": [25, 27, 31, 34, 43, 47], "efficientconformerencod": [25, 28], "strideconformerencoderlay": [25, 29], "conv2dsubsampling2": [25, 30], "multi": [26, 32, 45, 49, 75, 76], "n_head": [26, 32, 41, 45], "n_feat": [26, 32, 45], "group_siz": [26, 28], "multiheadedattent": [26, 29, 32, 36, 43, 45, 50, 53], "rel": [26, 32, 45, 51], "1901": [26, 32, 45, 51], "02860": [26, 32, 45, 51], "2109": [26, 41], "01163": 26, "queri": [26, 32, 45], "dot": [26, 32, 45], "param": [26, 27, 28, 29, 32, 34, 36, 38, 41, 45, 47, 49, 51, 53, 56, 69], "time1": [26, 32, 45], "time2": [26, 32, 45], "embed": [26, 32, 41, 43, 45, 56], "d_model": [26, 32, 45, 51, 69], "forward_attent": [26, 32, 45], "padding_q": 26, "vector": [26, 32, 45, 51], "groupedattent": 26, "effic": 26, "pad4group": 26, "q": 26, "k": [26, 76], "v": [26, 40, 76], "rel_shift": [26, 32, 45], "zero_triu": [26, 32, 45], "positin": [26, 32, 45], "lower": [26, 32, 45], "triangular": [26, 32, 45], "matrix": [26, 28, 32, 45], "relu": [27, 34, 37, 41, 47, 55], "norm": [27, 34, 41, 47], "batch_norm": [27, 28, 34, 35, 47, 52], "stride": [27, 28, 33, 38, 73], "normalize_befor": [28, 29, 35, 36, 49, 50, 52, 53], "macaron_styl": [28, 52], "activation_typ": [28, 35, 52], "swish": [28, 35, 41, 43, 52], "use_cnn_modul": [28, 52], "cnn_module_kernel": [28, 35, 52], "cnn_module_norm": [28, 52], "stride_layer_idx": 28, "group_layer_idx": 28, "stride_kernel": 28, "kwarg": [28, 57, 69], "calculate_downsampling_factor": [28, 35], "xs_len": [28, 35, 38, 52], "emb": [28, 41, 49, 52], "use_onnx": 28, "simul": 28, "onnx": 28, "set_global_chunk_s": 28, "self_attn": [29, 36, 50, 53], "feed_forward": [29, 50, 53], "feed_forward_macaron": [29, 53], "conv_modul": [29, 36, 53], "pointwise_conv_lay": 29, "instanc": [29, 33, 35, 36, 38, 41, 50, 53], "relpositionmultiheadedattent": [29, 31, 32, 36, 43, 45, 53], "argument": [29, 36, 50, 53, 69], "feed": [29, 36, 37, 50, 53, 55], "positionwisefeedforward": [29, 31, 36, 37, 38, 43, 50, 53, 55], "convlutionmodul": [29, 36, 53], "layer_norm": [29, 36, 49, 50, 53], "sub": [29, 36, 49, 50, 53], "conformerencoderlay": [29, 43, 53], "idim": [30, 37, 38, 55, 56], "odim": [30, 38, 48, 56], "pos_enc_class": [30, 38, 49, 56], "basesubsampl": [30, 38, 43, 56], "2d": [30, 38, 48, 56], "x_mask": [30, 38, 56], "conv2dvalid": [31, 33], "squeezeformerencod": [31, 35], "squeezeformerencoderlay": [31, 36], "positionwise_feed_forward": [31, 43], "depthwiseconv2dsubsampling4": [31, 38], "timereductionlayer1d": [31, 38], "timereductionlayer2d": [31, 38], "timereductionlayerstream": [31, 38], "do_rel_shift": [32, 35], "adaptive_scal": [32, 34, 35, 37], "init_weight": [32, 34, 35, 37, 38], "valid": [33, 65, 68, 75, 76], "in_channel": 33, "out_channel": 33, "dilat": 33, "group": [33, 73], "padding_mod": 33, "zero": [33, 41, 51, 68], "devic": [33, 41, 65, 68, 73, 75, 76], "valid_trigx": 33, "valid_trigi": 33, "_convnd": 33, "everi": [33, 35, 36, 38, 41, 70, 73], "overridden": [33, 35, 36, 38, 41], "although": [33, 35, 36, 38, 41], "recip": [33, 35, 36, 38, 41, 75, 76], "pass": [33, 35, 36, 38, 41, 45, 50, 68, 69, 73], "within": [33, 35, 36, 38, 41], "afterward": [33, 35, 36, 38, 41], "former": [33, 35, 36, 38, 41], "care": [33, 35, 36, 38, 41], "regist": [33, 35, 36, 38, 41], "hook": [33, 35, 36, 38, 41], "latter": [33, 35, 36, 38, 41], "silent": [33, 35, 36, 38, 41, 76], "output_pad": 33, "transpos": 33, "encoder_dim": [35, 38], "reduce_idx": 35, "recover_idx": 35, "11": [35, 61, 76], "feed_forward_expansion_factor": 35, "dw_stride": [35, 38], "input_dropout_r": [35, 38], "time_reduction_layer_typ": 35, "conv1d": 35, "feed_forward_dropout_r": 35, "cnn_norm_typ": 35, "concat_aft": [35, 36], "check_ascending_list": 35, "feed_forward1": 36, "feed_forward2": 36, "positionwis": [37, 55], "hidden_unit": [37, 55], "feedforward": [37, 49, 55], "appi": [37, 55], "dimenst": [37, 55], "timereductionlay": 38, "depthwis": 38, "bank": 38, "out_dim": 38, "nemo": 38, "reduct": 38, "procedur": 38, "downsampl": 38, "multiheadattentionmechan": 38, "kernel": 38, "factor": 38, "joint": [39, 73], "transducerjoint": [39, 40], "predictor": [39, 61], "applypad": [39, 41], "convpredictor": [39, 41], "embeddingpredictor": [39, 41], "predictorbas": [39, 41], "rnnpredictor": [39, 41], "voca_s": [40, 41], "enc_output_s": 40, "pred_output_s": 40, "join_dim": 40, "prejoin_linear": 40, "postjoin_linear": 40, "joint_mod": 40, "tanh": 40, "hat_joint": 40, "hat_activ": 40, "enc_out": 40, "pred_out": 40, "pre_project": 40, "u": 40, "pad_valu": [41, 61], "max_time_step": 41, "embed_s": 41, "embed_dropout": 41, "history_s": 41, "layer_norm_epsilon": 41, "1e": [41, 69, 76], "05": [41, 54, 69], "batch_to_cach": 41, "history_1": 41, "history_2": 41, "history_3": 41, "new_ach": 41, "cache_to_batch": 41, "history3": 41, "new_caceh": 41, "forward_step": 41, "time_step": 41, "init_st": 41, "pdf": 41, "07513": 41, "proj": 41, "hidden_s": 41, "num_lay": 41, "rnn_type": [41, 61], "lstm": 41, "state_m": 41, "state_c": 41, "n_layer": 41, "state_m_1": 41, "state_c_1": 41, "state_m_2": 41, "state_c_2": 41, "new_cach": 41, "max_tim": 41, "asr_model": 43, "cmvn": [43, 58], "globalcmvn": [43, 46], "bitransformerdecod": [43, 49], "transformerdecod": [43, 49], "decoder_lay": 43, "decoderlay": [43, 50], "nopositionalencod": [43, 51], "positionalencod": [43, 49, 51], "relpositionalencod": [43, 51], "baseencod": [43, 52], "conformerencod": [43, 52], "transformerencod": [43, 52], "transformerencoderlay": [43, 53], "label_smoothing_loss": 43, "labelsmoothingloss": [43, 54], "conv2dsubsampling4": [43, 56], "conv2dsubsampling6": [43, 56], "conv2dsubsampling8": [43, 56], "embedinignosubsampl": [43, 56], "linearnosubsampl": [43, 56], "cross": [45, 49, 65, 75, 76], "mocha": 45, "But": [45, 76], "forward_qkv": 45, "istd": 46, "norm_var": 46, "feat_dim": 46, "normal": [46, 54, 75, 76], "encoder_output_s": [48, 49], "argmax": 48, "hs_pad": 48, "3d": 48, "tmax": [48, 61], "eproj": 48, "hlen": 48, "ys_pad": [48, 61], "ys_len": [48, 61], "loss": [48, 54, 75, 76], "lmax": [48, 61], "log_softmax": 48, "softmax": [48, 49, 73], "vocab_s": [49, 76], "r_num_block": 49, "self_attention_dropout_r": 49, "src_attention_dropout_r": 49, "use_output_lay": 49, "transfom": 49, "wise": 49, "scaledpositionalencod": 49, "memory_mask": [49, 50], "ys_in_pad": 49, "ys_in_len": 49, "r_ys_in_pad": 49, "reverse_weight": 49, "float32": 49, "maxlen_in": [49, 50], "feat": 49, "int64": 49, "maxlen_out": [49, 50], "r_x": 49, "olen": 49, "forward_one_step": 49, "tgt": [49, 50], "tgt_mask": [49, 50], "uint8": 49, "max_time_out": 49, "per": 49, "src_attent": 49, "cif": [49, 50], "bidirect": 49, "src_attn": 50, "inter": 50, "gpt": 50, "positon": 51, "No": 51, "interfac": [51, 53], "compat": [51, 53], "position_encod": [51, 56], "5000": [51, 76], "revers": [51, 61], "maximum": [51, 69], "pe": 51, "po": 51, "2i": 51, "sin": 51, "dmodel": 51, "co": 51, "apply_dropout": 51, "onc": 51, "utter": [51, 75, 76], "appendix": 51, "abs_po": 52, "positionwise_conv_kernel_s": 52, "selfattention_layer_typ": 52, "smooth": 54, "normalize_length": 54, "ce": 54, "version": [54, 70], "prob": [54, 73], "divid": 54, "among": 54, "9": [54, 61], "target": [54, 61], "flatten": 54, "seqlen": 54, "predict": [54, 61], "signal": 54, "padding_id": 54, "kl": 54, "scalar": 54, "pos_enc": 56, "linear": [56, 73], "object": [57, 65], "common": 58, "add_blank": [58, 61], "add_sos_eo": [58, 61], "get_activ": [58, 61], "get_rnn": [58, 61], "get_subsampl": [58, 61], "log_add": [58, 61], "pad_list": [58, 61], "remove_duplicates_and_blank": [58, 61], "replace_duplicates_with_blank": [58, 61], "reverse_pad_list": [58, 61], "th_accuraci": [58, 61], "override_config": [58, 62], "context_graph": 58, "ctc_util": 58, "executor": 58, "file_util": 58, "read_list": [58, 66], "read_non_lang_symbol": [58, 66], "read_symbol_t": [58, 66], "init_model": 58, "add_optional_chunk_mask": [58, 68], "causal_or_lookahead_mask": [58, 68], "make_non_pad_mask": [58, 68], "make_pad_mask": [58, 68], "mask_finished_pr": [58, 68], "mask_finished_scor": [58, 68], "subsequent_chunk_mask": [58, 68], "subsequent_mask": [58, 68], "schedul": [58, 65], "cosineann": [58, 69], "noamann": [58, 69], "noamholdann": [58, 69], "squareann": [58, 69], "squarerootann": [58, 69], "squarerootconstantpolici": [58, 69], "warmupannealholdpolici": [58, 69], "warmupholdpolici": [58, 69], "warmuplr": [58, 69], "warmuppolici": [58, 69], "unil": 61, "ignore_id": 61, "prepad": 61, "ys_in": 61, "eo": [61, 68, 73, 75, 76], "eeo": 61, "ys_out": 61, "sos_id": 61, "eos_id": 61, "act": 61, "stabl": [61, 73], "t_1": 61, "t_2": 61, "t_b": 61, "ones": 61, "hyp": 61, "tokenmax": 61, "seq": 61, "pad_output": 61, "pad_target": 61, "ignore_label": 61, "longtensor": 61, "override_list": 62, "cv": 65, "data_load": 65, "optim": [65, 69, 75, 76], "writer": 65, "scaler": 65, "list_fil": 66, "non_lang_sym_path": 66, "linguist": [66, 76], "nois": 66, "brk": 66, "sym": 66, "symbol_table_fil": 66, "static": 68, "greater": [68, 75, 76], "left_context": 68, "left_t_valid": 68, "futur": 68, "noncaus": 68, "seq_len": 68, "seq_mask": 68, "unsqueez": 68, "enabl": [68, 70], "pad_mask": 68, "descript": [68, 73], "pred": 68, "flag": 68, "finish": [68, 73, 75, 76], "arrai": 68, "beam_siz": [68, 75, 76], "aliv": 68, "aim": 68, "give": [68, 73], "rest": 68, "inf": 68, "num_left_chunk": 68, "cpu": 68, "subsequ": 68, "cuda": [68, 75, 76], "auto": 68, "regress": 68, "fulli": 68, "long": [68, 70, 73], "max_step": 69, "min_lr": 69, "last_epoch": 69, "warmup_step": 69, "warmup_ratio": 69, "_lrschedul": 69, "get_lr": 69, "decay_r": 69, "set_step": 69, "constant_step": 69, "constant_ratio": 69, "warmup": 69, "logic": 69, "lr": 69, "polici": 69, "clariti": 69, "ratio": 69, "total": [69, 76], "infinit": [69, 73], "minimum": 69, "hold": 69, "learn": 69, "decai": 69, "constant": 69, "hold_step": 69, "hold_ratio": 69, "variant": 69, "warm": 69, "25000": 69, "almost": 69, "noamlr": 69, "except": 69, "model_s": 69, "min": [69, 70], "equal": 69, "develop": [70, 73], "timestamp": 70, "align": 70, "phone": 70, "mainstream": 70, "mp3": 70, "flac": [70, 76], "ch": 70, "\u4e2d\u6587": 70, "maco": 70, "pack": 70, "window": 70, "linux": 70, "sy": 70, "audio_fil": 70, "argv": 70, "etc": 70, "print": [70, 76], "offici": 70, "specif": 70, "automat": 70, "md": 70, "nbest": 70, "top": 70, "enable_timestamp": 70, "bonu": 70, "continuous_decod": 70, "\u4e0d\u5fd8\u521d\u5fc3": 70, "\u7262\u8bb0\u4f7f\u547d": 70, "wave": 70, "test_wav": 70, "open": [70, 76], "rb": 70, "fin": 70, "assert": 70, "getnchannel": 70, "readfram": 70, "getnfram": 70, "suppos": 70, "16k": 70, "16bit": 70, "interv": 70, "16000": 70, "last": 70, "chunk_wav": 70, "behavior": 70, "setup": 70, "jinja2": 72, "nbsphinx": 72, "sphinx": 72, "recommonmark": 72, "markdown": 72, "rtd": 72, "theme": 72, "torchaudio": [72, 75], "u2": [73, 75, 76], "balanc": 73, "latenc": 73, "accur": 73, "rescor": [73, 75, 76], "autoregress": 73, "benefit": 73, "find": [73, 75, 76], "form": 73, "usual": 73, "degrad": 73, "lot": 73, "spike": 73, "aspect": 73, "favor": 73, "server": 73, "fed": 73, "further": 73, "partial": 73, "select": 73, "affect": 73, "limit": 73, "less": [73, 75, 76], "promis": 73, "proper": 73, "brief": 73, "subsampling_r": 73, "sos_symbol": 73, "eos_symbol": 73, "forward_encoder_chunk": 73, "ctc_activ": 73, "forward_attention_decod": 73, "increment": 73, "requri": 73, "att": 73, "tircki": 73, "simpli": 73, "straightforward": 73, "neglig": 73, "blue": 73, "color": 73, "vocabulari": [73, 75, 76], "bi": 73, "direct": 73, "recurr": 73, "dnn": 73, "feel": [75, 76], "free": [75, 76], "issu": [75, 76], "thank": [75, 76], "kind": [75, 76], "feedback": [75, 76], "suggest": [75, 76], "manual": [75, 76], "understand": [75, 76], "bash": [75, 76], "stop_stag": [75, 76], "variabl": [75, 76], "absolut": 75, "usernam": 75, "aishell_data_prep": 75, "tab": [75, 76], "separ": [75, 76], "column": [75, 76], "wav_id": [75, 76], "text_label": [75, 76], "bac009s0002w0125": 75, "\u5404\u5730\u653f\u5e9c\u4fbf\u7eb7\u7eb7\u8ddf\u8fdb": 75, "raw": [75, 76], "copi": 75, "compute_cmvn_stat": [75, 76], "cepstral": [75, 76], "varianc": [75, 76], "These": [75, 76], "acoust": [75, 76], "integ": [75, 76], "unk": [75, 76], "\u4e00": 75, "\u4e01": 75, "\u9f9a": 75, "4230": 75, "\u9f9f": 75, "4231": 75, "4232": 75, "denot": [75, 76], "unknown": [75, 76], "aslo": [75, 76], "design": [75, 76], "anoth": [75, 76], "shard": [75, 76], "10k": [75, 76], "5k": [75, 76], "ddp": [75, 76], "dist_backend": [75, 76], "nccl": [75, 76], "gloo": [75, 76], "visibl": [75, 76], "cuda_visible_devic": [75, 76], "card": [75, 76], "resum": [75, 76], "termin": [75, 76], "accident": [75, 76], "exp": [75, 76], "your_exp": [75, 76], "Then": [75, 76], "yaml": [75, 76], "train_conform": [75, 76], "tensorboard": [75, 76], "2080": [75, 76], "ti": [75, 76], "dai": [75, 76], "monitor": [75, 76], "logdir": [75, 76], "your_exp_nam": [75, 76], "port": [75, 76], "12598": [75, 76], "bind_al": [75, 76], "averag": [75, 76], "average_checkpoint": [75, 76], "average_num": [75, 76], "four": [75, 76], "ctc_greedy_search": [75, 76], "greedi": [75, 76], "ctc_prefix_beam_search": [75, 76], "attention_rescor": [75, 76], "candid": [75, 76], "higher": [75, 76], "wer": [75, 76], "evalu": [75, 76], "error": [75, 76], "export_jit": [75, 76], "program": 75, "data_url": 76, "www": 76, "datadir": 76, "le": 76, "ge": 76, "echo": 76, "clean": 76, "360": 76, "download_and_untar": 76, "fi": 76, "wave_data": 76, "underscor": 76, "data_prep_torchaudio": 76, "1867": 76, "154075": 76, "0014": 76, "1970": 76, "26100": 76, "0022": 76, "him": 76, "THAT": 76, "IT": 76, "did": 76, "AT": 76, "task": 76, "yourself": 76, "most": 76, "train_960": 76, "merg": 76, "train_clean_100": 76, "train_clean_360": 76, "train_other_500": 76, "dev_clean": 76, "dev_oth": 76, "in_scp": 76, "out_cmvn": 76, "subset": 76, "lang_char": 76, "bpemod": 76, "nbpe": 76, "_unit": 76, "bpemodel": 76, "borrow": 76, "cut": 76, "spm_train": 76, "model_typ": 76, "model_prefix": 76, "input_sentence_s": 76, "100000000": 76, "spm_encod": 76, "output_format": 76, "tr": 76, "uniq": 76, "awk": 76, "nr": 76, "num_token": 76, "wc": 76, "byte": 76, "pair": 76, "sentencepiec": 76, "4995": 76, "young": 76, "4996": 76, "4997": 76, "youth": 76, "4998": 76, "z": 76, "4999": 76, "zz": 76, "5001": 76, "recog_set": 76, "make_raw_list": 76, "1455": 76, "134435": 76, "0000": 76, "mnt": 76, "nf": 76, "ptm1": 76, "THE": 76, "girl": 76, "who": 76, "came": 76, "INTO": 76, "world": 76, "night": 76, "jess": 76, "ran": 76, "cry": 76, "god": 76, "he": 76, "BE": 76, "son": 76, "had": 76, "grown": 76, "womanhood": 76, "farm": 76, "0001": 76, "AND": 76, "NOT": 76, "angri": 76, "she": 76, "wa": 76, "often": 76, "moros": 76, "winesburg": 76, "said": 76, "drank": 76, "her": 76, "husband": 76, "banker": 76, "0002": 76, "BUT": 76, "louis": 76, "made": 76, "happi": 76, "flew": 76, "half": 76, "insan": 76, "fit": 76, "OF": 76, "temper": 76, "sometim": 76, "noisi": 76, "quarrelsom": 76, "swore": 76, "cri": 76, "anger": 76, "got": 76, "knife": 76, "kitchen": 76, "threaten": 76, "life": 76, "init_fil": 76, "ddp_init": 76, "rm": 76, "delet": 76, "init_method": 76, "readlink": 76, "num_gpu": 76, "cmvn_opt": 76, "write": 76, "later": 76, "pin_memori": 76, "wait": 76, "todo": 76, "decode_checkpoint": 76, "avg_": 76, "average_model": 76, "dst_model": 76, "src_path": 76, "val_best": 76, "poll": 76, "idx": 76, "decode_mod": 76, "test_dir": 76, "penalti": 76, "result_fil": 76, "text_bp": 76, "spm_decod": 76, "input_format": 76, "sed": 76, "eq": 76, "output_fil": 76, "integr": 76, "which_lm": 76, "prune": 76, "arpa": 76, "wget": 76, "unzip": 76, "gunzip": 76, "train_960_unigram5000": 76, "fst_dir": 76, "acoustic_scal": 76, "lm_with_runtime_": 76, "tail": 76}, "objects": {"": [[11, 0, 0, "-", "wenet"]], "wenet": [[12, 0, 0, "-", "branchformer"], [16, 0, 0, "-", "cli"], [20, 0, 0, "-", "dataset"], [25, 0, 0, "-", "efficient_conformer"], [31, 0, 0, "-", "squeezeformer"], [39, 0, 0, "-", "transducer"], [43, 0, 0, "-", "transformer"], [58, 0, 0, "-", "utils"]], "wenet.branchformer": [[13, 0, 0, "-", "cgmlp"], [14, 0, 0, "-", "encoder"], [15, 0, 0, "-", "encoder_layer"]], "wenet.branchformer.cgmlp": [[13, 1, 1, "", "ConvolutionalGatingMLP"], [13, 1, 1, "", "ConvolutionalSpatialGatingUnit"]], "wenet.branchformer.cgmlp.ConvolutionalGatingMLP": [[13, 2, 1, "", "forward"], [13, 3, 1, "", "training"]], "wenet.branchformer.cgmlp.ConvolutionalSpatialGatingUnit": [[13, 2, 1, "", "espnet_initialization_fn"], [13, 2, 1, "", "forward"], [13, 3, 1, "", "training"]], "wenet.branchformer.encoder": [[14, 1, 1, "", "BranchformerEncoder"]], "wenet.branchformer.encoder.BranchformerEncoder": [[14, 2, 1, "", "forward"], [14, 2, 1, "", "forward_chunk"], [14, 2, 1, "", "forward_chunk_by_chunk"], [14, 2, 1, "", "output_size"], [14, 3, 1, "", "training"]], "wenet.branchformer.encoder_layer": [[15, 1, 1, "", "BranchformerEncoderLayer"]], "wenet.branchformer.encoder_layer.BranchformerEncoderLayer": [[15, 2, 1, "", "forward"], [15, 3, 1, "", "training"]], "wenet.dataset": [[24, 0, 0, "-", "wav_distortion"]], "wenet.dataset.wav_distortion": [[24, 4, 1, "", "amp2db"], [24, 4, 1, "", "db2amp"], [24, 4, 1, "", "distort"], [24, 4, 1, "", "distort_chain"], [24, 4, 1, "", "distort_wav_conf"], [24, 4, 1, "", "distort_wav_conf_and_save"], [24, 4, 1, "", "generate_amp_mask"], [24, 4, 1, "", "make_amp_mask"], [24, 4, 1, "", "make_fence_distortion"], [24, 4, 1, "", "make_gain_db"], [24, 4, 1, "", "make_jag_distortion"], [24, 4, 1, "", "make_max_distortion"], [24, 4, 1, "", "make_poly_distortion"], [24, 4, 1, "", "make_quad_distortion"]], "wenet.efficient_conformer": [[26, 0, 0, "-", "attention"], [27, 0, 0, "-", "convolution"], [28, 0, 0, "-", "encoder"], [29, 0, 0, "-", "encoder_layer"], [30, 0, 0, "-", "subsampling"]], "wenet.efficient_conformer.attention": [[26, 1, 1, "", "GroupedRelPositionMultiHeadedAttention"]], "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention": [[26, 2, 1, "", "forward"], [26, 2, 1, "", "forward_attention"], [26, 2, 1, "", "pad4group"], [26, 2, 1, "", "rel_shift"], [26, 3, 1, "", "training"]], "wenet.efficient_conformer.convolution": [[27, 1, 1, "", "ConvolutionModule"]], "wenet.efficient_conformer.convolution.ConvolutionModule": [[27, 2, 1, "", "forward"], [27, 3, 1, "", "training"]], "wenet.efficient_conformer.encoder": [[28, 1, 1, "", "EfficientConformerEncoder"]], "wenet.efficient_conformer.encoder.EfficientConformerEncoder": [[28, 2, 1, "", "calculate_downsampling_factor"], [28, 2, 1, "", "forward"], [28, 2, 1, "", "forward_chunk"], [28, 2, 1, "", "forward_chunk_by_chunk"], [28, 2, 1, "", "output_size"], [28, 2, 1, "", "set_global_chunk_size"], [28, 3, 1, "", "training"]], "wenet.efficient_conformer.encoder_layer": [[29, 1, 1, "", "StrideConformerEncoderLayer"]], "wenet.efficient_conformer.encoder_layer.StrideConformerEncoderLayer": [[29, 2, 1, "", "forward"], [29, 3, 1, "", "training"]], "wenet.efficient_conformer.subsampling": [[30, 1, 1, "", "Conv2dSubsampling2"]], "wenet.efficient_conformer.subsampling.Conv2dSubsampling2": [[30, 2, 1, "", "forward"], [30, 3, 1, "", "training"]], "wenet.squeezeformer": [[32, 0, 0, "-", "attention"], [33, 0, 0, "-", "conv2d"], [34, 0, 0, "-", "convolution"], [35, 0, 0, "-", "encoder"], [36, 0, 0, "-", "encoder_layer"], [37, 0, 0, "-", "positionwise_feed_forward"], [38, 0, 0, "-", "subsampling"]], "wenet.squeezeformer.attention": [[32, 1, 1, "", "RelPositionMultiHeadedAttention"]], "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention": [[32, 2, 1, "", "forward"], [32, 2, 1, "", "forward_attention"], [32, 2, 1, "", "init_weights"], [32, 2, 1, "", "rel_shift"], [32, 3, 1, "", "training"]], "wenet.squeezeformer.conv2d": [[33, 1, 1, "", "Conv2dValid"]], "wenet.squeezeformer.conv2d.Conv2dValid": [[33, 3, 1, "", "bias"], [33, 3, 1, "", "dilation"], [33, 2, 1, "", "forward"], [33, 3, 1, "", "groups"], [33, 3, 1, "", "in_channels"], [33, 3, 1, "", "kernel_size"], [33, 3, 1, "", "out_channels"], [33, 3, 1, "", "output_padding"], [33, 3, 1, "", "padding"], [33, 3, 1, "", "padding_mode"], [33, 3, 1, "", "stride"], [33, 3, 1, "", "transposed"], [33, 3, 1, "", "weight"]], "wenet.squeezeformer.convolution": [[34, 1, 1, "", "ConvolutionModule"]], "wenet.squeezeformer.convolution.ConvolutionModule": [[34, 2, 1, "", "forward"], [34, 2, 1, "", "init_weights"], [34, 3, 1, "", "training"]], "wenet.squeezeformer.encoder": [[35, 1, 1, "", "SqueezeformerEncoder"]], "wenet.squeezeformer.encoder.SqueezeformerEncoder": [[35, 2, 1, "", "calculate_downsampling_factor"], [35, 2, 1, "", "check_ascending_list"], [35, 2, 1, "", "forward"], [35, 2, 1, "", "forward_chunk"], [35, 2, 1, "", "forward_chunk_by_chunk"], [35, 2, 1, "", "output_size"], [35, 3, 1, "", "training"]], "wenet.squeezeformer.encoder_layer": [[36, 1, 1, "", "SqueezeformerEncoderLayer"]], "wenet.squeezeformer.encoder_layer.SqueezeformerEncoderLayer": [[36, 2, 1, "", "forward"], [36, 3, 1, "", "training"]], "wenet.squeezeformer.positionwise_feed_forward": [[37, 1, 1, "", "PositionwiseFeedForward"]], "wenet.squeezeformer.positionwise_feed_forward.PositionwiseFeedForward": [[37, 2, 1, "", "forward"], [37, 2, 1, "", "init_weights"], [37, 3, 1, "", "training"]], "wenet.squeezeformer.subsampling": [[38, 1, 1, "", "DepthwiseConv2dSubsampling4"], [38, 1, 1, "", "TimeReductionLayer1D"], [38, 1, 1, "", "TimeReductionLayer2D"], [38, 1, 1, "", "TimeReductionLayerStream"]], "wenet.squeezeformer.subsampling.DepthwiseConv2dSubsampling4": [[38, 2, 1, "", "forward"], [38, 3, 1, "", "training"]], "wenet.squeezeformer.subsampling.TimeReductionLayer1D": [[38, 2, 1, "", "forward"], [38, 2, 1, "", "init_weights"], [38, 3, 1, "", "training"]], "wenet.squeezeformer.subsampling.TimeReductionLayer2D": [[38, 2, 1, "", "forward"], [38, 2, 1, "", "init_weights"], [38, 3, 1, "", "training"]], "wenet.squeezeformer.subsampling.TimeReductionLayerStream": [[38, 2, 1, "", "forward"], [38, 2, 1, "", "init_weights"], [38, 3, 1, "", "training"]], "wenet.transducer": [[40, 0, 0, "-", "joint"], [41, 0, 0, "-", "predictor"]], "wenet.transducer.joint": [[40, 1, 1, "", "TransducerJoint"]], "wenet.transducer.joint.TransducerJoint": [[40, 2, 1, "", "forward"], [40, 3, 1, "", "training"]], "wenet.transducer.predictor": [[41, 4, 1, "", "ApplyPadding"], [41, 1, 1, "", "ConvPredictor"], [41, 1, 1, "", "EmbeddingPredictor"], [41, 1, 1, "", "PredictorBase"], [41, 1, 1, "", "RNNPredictor"]], "wenet.transducer.predictor.ConvPredictor": [[41, 2, 1, "", "batch_to_cache"], [41, 2, 1, "", "cache_to_batch"], [41, 2, 1, "", "forward"], [41, 2, 1, "", "forward_step"], [41, 2, 1, "", "init_state"], [41, 2, 1, "", "output_size"], [41, 3, 1, "", "training"]], "wenet.transducer.predictor.EmbeddingPredictor": [[41, 2, 1, "", "batch_to_cache"], [41, 2, 1, "", "cache_to_batch"], [41, 2, 1, "", "forward"], [41, 2, 1, "", "forward_step"], [41, 2, 1, "", "init_state"], [41, 2, 1, "", "output_size"], [41, 3, 1, "", "training"]], "wenet.transducer.predictor.PredictorBase": [[41, 2, 1, "", "batch_to_cache"], [41, 2, 1, "", "cache_to_batch"], [41, 2, 1, "", "forward"], [41, 2, 1, "", "forward_step"], [41, 2, 1, "", "init_state"], [41, 2, 1, "", "output_size"], [41, 3, 1, "", "training"]], "wenet.transducer.predictor.RNNPredictor": [[41, 2, 1, "", "batch_to_cache"], [41, 2, 1, "", "cache_to_batch"], [41, 2, 1, "", "forward"], [41, 2, 1, "", "forward_step"], [41, 2, 1, "", "init_state"], [41, 2, 1, "", "output_size"], [41, 3, 1, "", "training"]], "wenet.transformer": [[45, 0, 0, "-", "attention"], [46, 0, 0, "-", "cmvn"], [47, 0, 0, "-", "convolution"], [48, 0, 0, "-", "ctc"], [49, 0, 0, "-", "decoder"], [50, 0, 0, "-", "decoder_layer"], [51, 0, 0, "-", "embedding"], [52, 0, 0, "-", "encoder"], [53, 0, 0, "-", "encoder_layer"], [54, 0, 0, "-", "label_smoothing_loss"], [55, 0, 0, "-", "positionwise_feed_forward"], [56, 0, 0, "-", "subsampling"], [57, 0, 0, "-", "swish"]], "wenet.transformer.attention": [[45, 1, 1, "", "MultiHeadedAttention"], [45, 1, 1, "", "RelPositionMultiHeadedAttention"]], "wenet.transformer.attention.MultiHeadedAttention": [[45, 2, 1, "", "forward"], [45, 2, 1, "", "forward_attention"], [45, 2, 1, "", "forward_qkv"], [45, 3, 1, "", "training"]], "wenet.transformer.attention.RelPositionMultiHeadedAttention": [[45, 2, 1, "", "forward"], [45, 2, 1, "", "rel_shift"], [45, 3, 1, "", "training"]], "wenet.transformer.cmvn": [[46, 1, 1, "", "GlobalCMVN"]], "wenet.transformer.cmvn.GlobalCMVN": [[46, 2, 1, "", "forward"], [46, 3, 1, "", "training"]], "wenet.transformer.convolution": [[47, 1, 1, "", "ConvolutionModule"]], "wenet.transformer.convolution.ConvolutionModule": [[47, 2, 1, "", "forward"], [47, 3, 1, "", "training"]], "wenet.transformer.ctc": [[48, 1, 1, "", "CTC"]], "wenet.transformer.ctc.CTC": [[48, 2, 1, "", "argmax"], [48, 2, 1, "", "forward"], [48, 2, 1, "", "log_softmax"], [48, 3, 1, "", "training"]], "wenet.transformer.decoder": [[49, 1, 1, "", "BiTransformerDecoder"], [49, 1, 1, "", "TransformerDecoder"]], "wenet.transformer.decoder.BiTransformerDecoder": [[49, 2, 1, "", "forward"], [49, 2, 1, "", "forward_one_step"], [49, 3, 1, "", "training"]], "wenet.transformer.decoder.TransformerDecoder": [[49, 2, 1, "", "forward"], [49, 2, 1, "", "forward_one_step"], [49, 3, 1, "", "training"]], "wenet.transformer.decoder_layer": [[50, 1, 1, "", "DecoderLayer"]], "wenet.transformer.decoder_layer.DecoderLayer": [[50, 2, 1, "", "forward"], [50, 3, 1, "", "training"]], "wenet.transformer.embedding": [[51, 1, 1, "", "NoPositionalEncoding"], [51, 1, 1, "", "PositionalEncoding"], [51, 1, 1, "", "RelPositionalEncoding"]], "wenet.transformer.embedding.NoPositionalEncoding": [[51, 2, 1, "", "forward"], [51, 2, 1, "", "position_encoding"], [51, 3, 1, "", "training"]], "wenet.transformer.embedding.PositionalEncoding": [[51, 2, 1, "", "forward"], [51, 2, 1, "", "position_encoding"], [51, 3, 1, "", "training"]], "wenet.transformer.embedding.RelPositionalEncoding": [[51, 2, 1, "", "forward"], [51, 3, 1, "", "training"]], "wenet.transformer.encoder": [[52, 1, 1, "", "BaseEncoder"], [52, 1, 1, "", "ConformerEncoder"], [52, 1, 1, "", "TransformerEncoder"]], "wenet.transformer.encoder.BaseEncoder": [[52, 2, 1, "", "forward"], [52, 2, 1, "", "forward_chunk"], [52, 2, 1, "", "forward_chunk_by_chunk"], [52, 2, 1, "", "output_size"], [52, 3, 1, "", "training"]], "wenet.transformer.encoder.ConformerEncoder": [[52, 3, 1, "", "training"]], "wenet.transformer.encoder.TransformerEncoder": [[52, 3, 1, "", "training"]], "wenet.transformer.encoder_layer": [[53, 1, 1, "", "ConformerEncoderLayer"], [53, 1, 1, "", "TransformerEncoderLayer"]], "wenet.transformer.encoder_layer.ConformerEncoderLayer": [[53, 2, 1, "", "forward"], [53, 3, 1, "", "training"]], "wenet.transformer.encoder_layer.TransformerEncoderLayer": [[53, 2, 1, "", "forward"], [53, 3, 1, "", "training"]], "wenet.transformer.label_smoothing_loss": [[54, 1, 1, "", "LabelSmoothingLoss"]], "wenet.transformer.label_smoothing_loss.LabelSmoothingLoss": [[54, 2, 1, "", "forward"], [54, 3, 1, "", "training"]], "wenet.transformer.positionwise_feed_forward": [[55, 1, 1, "", "PositionwiseFeedForward"]], "wenet.transformer.positionwise_feed_forward.PositionwiseFeedForward": [[55, 2, 1, "", "forward"], [55, 3, 1, "", "training"]], "wenet.transformer.subsampling": [[56, 1, 1, "", "BaseSubsampling"], [56, 1, 1, "", "Conv2dSubsampling4"], [56, 1, 1, "", "Conv2dSubsampling6"], [56, 1, 1, "", "Conv2dSubsampling8"], [56, 1, 1, "", "EmbedinigNoSubsampling"], [56, 1, 1, "", "LinearNoSubsampling"]], "wenet.transformer.subsampling.BaseSubsampling": [[56, 2, 1, "", "position_encoding"], [56, 3, 1, "", "training"]], "wenet.transformer.subsampling.Conv2dSubsampling4": [[56, 2, 1, "", "forward"], [56, 3, 1, "", "training"]], "wenet.transformer.subsampling.Conv2dSubsampling6": [[56, 2, 1, "", "forward"], [56, 3, 1, "", "training"]], "wenet.transformer.subsampling.Conv2dSubsampling8": [[56, 2, 1, "", "forward"], [56, 3, 1, "", "training"]], "wenet.transformer.subsampling.EmbedinigNoSubsampling": [[56, 2, 1, "", "forward"], [56, 3, 1, "", "training"]], "wenet.transformer.subsampling.LinearNoSubsampling": [[56, 2, 1, "", "forward"], [56, 3, 1, "", "training"]], "wenet.transformer.swish": [[57, 1, 1, "", "Swish"]], "wenet.transformer.swish.Swish": [[57, 2, 1, "", "forward"], [57, 3, 1, "", "training"]], "wenet.utils": [[61, 0, 0, "-", "common"], [62, 0, 0, "-", "config"], [65, 0, 0, "-", "executor"], [66, 0, 0, "-", "file_utils"], [68, 0, 0, "-", "mask"], [69, 0, 0, "-", "scheduler"]], "wenet.utils.common": [[61, 4, 1, "", "add_blank"], [61, 4, 1, "", "add_sos_eos"], [61, 4, 1, "", "get_activation"], [61, 4, 1, "", "get_rnn"], [61, 4, 1, "", "get_subsample"], [61, 4, 1, "", "log_add"], [61, 4, 1, "", "pad_list"], [61, 4, 1, "", "remove_duplicates_and_blank"], [61, 4, 1, "", "replace_duplicates_with_blank"], [61, 4, 1, "", "reverse_pad_list"], [61, 4, 1, "", "th_accuracy"]], "wenet.utils.config": [[62, 4, 1, "", "override_config"]], "wenet.utils.executor": [[65, 1, 1, "", "Executor"]], "wenet.utils.executor.Executor": [[65, 2, 1, "", "cv"], [65, 2, 1, "", "train"]], "wenet.utils.file_utils": [[66, 4, 1, "", "read_lists"], [66, 4, 1, "", "read_non_lang_symbols"], [66, 4, 1, "", "read_symbol_table"]], "wenet.utils.mask": [[68, 4, 1, "", "add_optional_chunk_mask"], [68, 4, 1, "", "causal_or_lookahead_mask"], [68, 4, 1, "", "make_non_pad_mask"], [68, 4, 1, "", "make_pad_mask"], [68, 4, 1, "", "mask_finished_preds"], [68, 4, 1, "", "mask_finished_scores"], [68, 4, 1, "", "subsequent_chunk_mask"], [68, 4, 1, "", "subsequent_mask"]], "wenet.utils.scheduler": [[69, 1, 1, "", "CosineAnnealing"], [69, 1, 1, "", "NoamAnnealing"], [69, 1, 1, "", "NoamHoldAnnealing"], [69, 1, 1, "", "SquareAnnealing"], [69, 1, 1, "", "SquareRootAnnealing"], [69, 1, 1, "", "SquareRootConstantPolicy"], [69, 1, 1, "", "WarmupAnnealHoldPolicy"], [69, 1, 1, "", "WarmupHoldPolicy"], [69, 1, 1, "", "WarmupLR"], [69, 1, 1, "", "WarmupPolicy"]], "wenet.utils.scheduler.NoamAnnealing": [[69, 2, 1, "", "get_lr"]], "wenet.utils.scheduler.NoamHoldAnnealing": [[69, 2, 1, "", "set_step"]], "wenet.utils.scheduler.SquareRootConstantPolicy": [[69, 2, 1, "", "get_lr"]], "wenet.utils.scheduler.WarmupAnnealHoldPolicy": [[69, 2, 1, "", "get_lr"]], "wenet.utils.scheduler.WarmupHoldPolicy": [[69, 2, 1, "", "get_lr"]], "wenet.utils.scheduler.WarmupLR": [[69, 2, 1, "", "get_lr"], [69, 2, 1, "", "set_step"]], "wenet.utils.scheduler.WarmupPolicy": [[69, 2, 1, "", "get_lr"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"big": 0, "data": [0, 75, 76], "train": [0, 3, 74, 75, 76], "uio": 0, "necess": 0, "upgrad": 0, "io": 0, "mothod": 0, "system": [0, 5], "design": [0, 5, 73], "overal": 0, "chain": 0, "valid": 0, "experi": [0, 75, 76], "aishel": [0, 75], "raw": 0, "v": 0, "shard": 0, "wenetspeech": 0, "usag": [0, 1, 70], "q": 0, "A": 0, "context": 1, "bias": 1, "graph": 1, "ctc": [1, 48], "prefix": 1, "beam": 1, "search": 1, "wfst": 1, "prune": 1, "welcom": 2, "wenet": [2, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 75, 76], "": 2, "document": 2, "content": [2, 9, 71, 74], "indic": 2, "tabl": 2, "instal": [3, 70], "prebuilt": 3, "python": [3, 10, 70], "packag": [3, 11, 12, 16, 20, 25, 31, 39, 43, 58], "build": [3, 70], "deploy": 3, "jit": 4, "lm": [5, 76], "motiv": 5, "implement": [5, 73], "result": 5, "how": [5, 74], "us": [5, 75, 76], "paper": 6, "pretrain": [7, 8], "model": [7, 8, 18, 74, 75, 76], "type": [7, 8], "licens": [7, 8], "list": [7, 8], "product": 9, "runtim": [9, 73, 76], "api": 10, "refer": [10, 71, 73], "subpackag": 11, "branchform": [12, 13, 14, 15], "submodul": [12, 16, 20, 25, 31, 39, 43, 58], "cgmlp": 13, "modul": [13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "encod": [14, 28, 35, 52], "encoder_lay": [15, 29, 36, 53], "cli": [16, 17, 18, 19], "hub": 17, "transcrib": 19, "dataset": [20, 21, 22, 23, 24], "kaldi_io": 22, "processor": 23, "wav_distort": 24, "efficient_conform": [25, 26, 27, 28, 29, 30], "attent": [26, 32, 45], "convolut": [27, 34, 47], "subsampl": [30, 38, 56], "squeezeform": [31, 32, 33, 34, 35, 36, 37, 38], "conv2d": 33, "positionwise_feed_forward": [37, 55], "transduc": [39, 40, 41, 42], "joint": 40, "predictor": 41, "transform": [43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "asr_model": 44, "cmvn": [46, 60, 75, 76], "decod": 49, "decoder_lay": 50, "embed": 51, "label_smoothing_loss": 54, "swish": 57, "util": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "checkpoint": 59, "common": 61, "config": 62, "context_graph": 63, "ctc_util": 64, "executor": 65, "file_util": 66, "init_model": 67, "mask": 68, "schedul": 69, "bind": 70, "command": 70, "line": 70, "program": 70, "non": 70, "stream": 70, "your": 70, "local": 70, "machin": 70, "platform": 73, "support": 73, "architectur": 73, "interfac": 73, "cach": 73, "detail": 73, "tutori": [75, 76], "setup": [75, 76], "environ": [75, 76], "first": [75, 76], "stage": [75, 76], "1": [75, 76], "download": [75, 76], "0": [75, 76], "prepar": [75, 76], "extract": [75, 76], "optin": [75, 76], "featur": [75, 76], "2": [75, 76], "gener": [75, 76], "label": [75, 76], "token": [75, 76], "dictionari": [75, 76], "3": [75, 76], "format": [75, 76], "4": [75, 76], "neural": [75, 76], "network": [75, 76], "5": [75, 76], "recogn": [75, 76], "wav": [75, 76], "6": [75, 76], "export": [75, 76], "librispeech": 76, "option": 76, "7": 76, "add": 76, "test": 76}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 58}, "alltitles": {"Big Data Training: UIO": [[0, "big-data-training-uio"]], "Necessity of upgrading IO mothod": [[0, "necessity-of-upgrading-io-mothod"]], "System design of UIO": [[0, "system-design-of-uio"]], "Overall design": [[0, "overall-design"]], "Chain IO": [[0, "chain-io"]], "Validation experiments": [[0, "validation-experiments"]], "Aishell(raw vs shard)": [[0, "aishell-raw-vs-shard"]], "WenetSpeech(shard)": [[0, "wenetspeech-shard"]], "Usage of UIO": [[0, "usage-of-uio"]], "Q&A": [[0, "q-a"]], "Context Biasing": [[1, "context-biasing"]], "Context Graph": [[1, "context-graph"]], "CTC Prefix Beam Search": [[1, "ctc-prefix-beam-search"]], "CTC WFST Beam Search": [[1, "ctc-wfst-beam-search"]], "Pruning": [[1, "pruning"]], "Usage": [[1, "usage"]], "Welcome to wenet\u2019s documentation!": [[2, "welcome-to-wenet-s-documentation"]], "Contents:": [[2, null], [9, null], [71, null], [74, null]], "Indices and tables": [[2, "indices-and-tables"]], "Install": [[3, "install"], [70, "install"]], "Install prebuilt python package": [[3, "install-prebuilt-python-package"]], "Install for training": [[3, "install-for-training"]], "Build for deployment": [[3, "build-for-deployment"]], "JIT in WeNet": [[4, "jit-in-wenet"]], "LM for WeNet": [[5, "lm-for-wenet"]], "Motivation": [[5, "motivation"]], "System Design": [[5, "system-design"]], "Implementation": [[5, "implementation"]], "Results": [[5, "results"]], "How to use?": [[5, "how-to-use"]], "Papers": [[6, "papers"]], "Pretrained Models in WeNet": [[7, "pretrained-models-in-wenet"], [8, "pretrained-models-in-wenet"]], "Model Types": [[7, "model-types"], [8, "model-types"]], "Model License": [[7, "model-license"], [8, "model-license"]], "Model List": [[7, "model-list"], [8, "model-list"]], "Production Runtime": [[9, "production-runtime"]], "Python API Reference": [[10, "python-api-reference"]], "wenet package": [[11, "module-wenet"]], "Subpackages": [[11, "subpackages"]], "wenet.branchformer package": [[12, "module-wenet.branchformer"]], "Submodules": [[12, "submodules"], [16, "submodules"], [20, "submodules"], [25, "submodules"], [31, "submodules"], [39, "submodules"], [43, "submodules"], [58, "submodules"]], "wenet.branchformer.cgmlp module": [[13, "module-wenet.branchformer.cgmlp"]], "wenet.branchformer.encoder module": [[14, "module-wenet.branchformer.encoder"]], "wenet.branchformer.encoder_layer module": [[15, "module-wenet.branchformer.encoder_layer"]], "wenet.cli package": [[16, "module-wenet.cli"]], "wenet.cli.hub module": [[17, "wenet-cli-hub-module"]], "wenet.cli.model module": [[18, "wenet-cli-model-module"]], "wenet.cli.transcribe module": [[19, "wenet-cli-transcribe-module"]], "wenet.dataset package": [[20, "module-wenet.dataset"]], "wenet.dataset.dataset module": [[21, "wenet-dataset-dataset-module"]], "wenet.dataset.kaldi_io module": [[22, "wenet-dataset-kaldi-io-module"]], "wenet.dataset.processor module": [[23, "wenet-dataset-processor-module"]], "wenet.dataset.wav_distortion module": [[24, "module-wenet.dataset.wav_distortion"]], "wenet.efficient_conformer package": [[25, "module-wenet.efficient_conformer"]], "wenet.efficient_conformer.attention module": [[26, "module-wenet.efficient_conformer.attention"]], "wenet.efficient_conformer.convolution module": [[27, "module-wenet.efficient_conformer.convolution"]], "wenet.efficient_conformer.encoder module": [[28, "module-wenet.efficient_conformer.encoder"]], "wenet.efficient_conformer.encoder_layer module": [[29, "module-wenet.efficient_conformer.encoder_layer"]], "wenet.efficient_conformer.subsampling module": [[30, "module-wenet.efficient_conformer.subsampling"]], "wenet.squeezeformer package": [[31, "module-wenet.squeezeformer"]], "wenet.squeezeformer.attention module": [[32, "module-wenet.squeezeformer.attention"]], "wenet.squeezeformer.conv2d module": [[33, "module-wenet.squeezeformer.conv2d"]], "wenet.squeezeformer.convolution module": [[34, "module-wenet.squeezeformer.convolution"]], "wenet.squeezeformer.encoder module": [[35, "module-wenet.squeezeformer.encoder"]], "wenet.squeezeformer.encoder_layer module": [[36, "module-wenet.squeezeformer.encoder_layer"]], "wenet.squeezeformer.positionwise_feed_forward module": [[37, "module-wenet.squeezeformer.positionwise_feed_forward"]], "wenet.squeezeformer.subsampling module": [[38, "module-wenet.squeezeformer.subsampling"]], "wenet.transducer package": [[39, "module-wenet.transducer"]], "wenet.transducer.joint module": [[40, "module-wenet.transducer.joint"]], "wenet.transducer.predictor module": [[41, "module-wenet.transducer.predictor"]], "wenet.transducer.transducer module": [[42, "wenet-transducer-transducer-module"]], "wenet.transformer package": [[43, "module-wenet.transformer"]], "wenet.transformer.asr_model module": [[44, "wenet-transformer-asr-model-module"]], "wenet.transformer.attention module": [[45, "module-wenet.transformer.attention"]], "wenet.transformer.cmvn module": [[46, "module-wenet.transformer.cmvn"]], "wenet.transformer.convolution module": [[47, "module-wenet.transformer.convolution"]], "wenet.transformer.ctc module": [[48, "module-wenet.transformer.ctc"]], "wenet.transformer.decoder module": [[49, "module-wenet.transformer.decoder"]], "wenet.transformer.decoder_layer module": [[50, "module-wenet.transformer.decoder_layer"]], "wenet.transformer.embedding module": [[51, "module-wenet.transformer.embedding"]], "wenet.transformer.encoder module": [[52, "module-wenet.transformer.encoder"]], "wenet.transformer.encoder_layer module": [[53, "module-wenet.transformer.encoder_layer"]], "wenet.transformer.label_smoothing_loss module": [[54, "module-wenet.transformer.label_smoothing_loss"]], "wenet.transformer.positionwise_feed_forward module": [[55, "module-wenet.transformer.positionwise_feed_forward"]], "wenet.transformer.subsampling module": [[56, "module-wenet.transformer.subsampling"]], "wenet.transformer.swish module": [[57, "module-wenet.transformer.swish"]], "wenet.utils package": [[58, "module-wenet.utils"]], "wenet.utils.checkpoint module": [[59, "wenet-utils-checkpoint-module"]], "wenet.utils.cmvn module": [[60, "wenet-utils-cmvn-module"]], "wenet.utils.common module": [[61, "module-wenet.utils.common"]], "wenet.utils.config module": [[62, "module-wenet.utils.config"]], "wenet.utils.context_graph module": [[63, "wenet-utils-context-graph-module"]], "wenet.utils.ctc_util module": [[64, "wenet-utils-ctc-util-module"]], "wenet.utils.executor module": [[65, "module-wenet.utils.executor"]], "wenet.utils.file_utils module": [[66, "module-wenet.utils.file_utils"]], "wenet.utils.init_model module": [[67, "wenet-utils-init-model-module"]], "wenet.utils.mask module": [[68, "module-wenet.utils.mask"]], "wenet.utils.scheduler module": [[69, "module-wenet.utils.scheduler"]], "Python Binding": [[70, "python-binding"]], "Command-line usage": [[70, "command-line-usage"]], "Programming usage": [[70, "programming-usage"]], "Non-streaming Usage": [[70, "non-streaming-usage"]], "Streaming Usage": [[70, "streaming-usage"]], "Build on Your Local Machine": [[70, "build-on-your-local-machine"]], "Reference": [[71, "reference"]], "Runtime for WeNet": [[73, "runtime-for-wenet"]], "Platforms Supported": [[73, "platforms-supported"]], "Architecture and Implementation": [[73, "architecture-and-implementation"]], "Architecture": [[73, "architecture"]], "Interface Design": [[73, "interface-design"]], "Cache in Details": [[73, "cache-in-details"]], "References": [[73, "references"]], "How to train models?": [[74, "how-to-train-models"]], "Tutorial on AIShell": [[75, "tutorial-on-aishell"]], "Setup environment": [[75, "setup-environment"], [76, "setup-environment"]], "First Experiment": [[75, "first-experiment"], [76, "first-experiment"]], "Stage -1: Download data": [[75, "stage-1-download-data"], [76, "stage-1-download-data"]], "Stage 0: Prepare Training data": [[75, "stage-0-prepare-training-data"], [76, "stage-0-prepare-training-data"]], "Stage 1: Extract optinal cmvn features": [[75, "stage-1-extract-optinal-cmvn-features"], [76, "stage-1-extract-optinal-cmvn-features"]], "Stage 2: Generate label token dictionary": [[75, "stage-2-generate-label-token-dictionary"], [76, "stage-2-generate-label-token-dictionary"]], "Stage 3: Prepare WeNet data format": [[75, "stage-3-prepare-wenet-data-format"], [76, "stage-3-prepare-wenet-data-format"]], "Stage 4: Neural Network training": [[75, "stage-4-neural-network-training"], [76, "stage-4-neural-network-training"]], "Stage 5: Recognize wav using the trained model": [[75, "stage-5-recognize-wav-using-the-trained-model"], [76, "stage-5-recognize-wav-using-the-trained-model"]], "Stage 6: Export the trained model": [[75, "stage-6-export-the-trained-model"]], "Tutorial on LibriSpeech": [[76, "tutorial-on-librispeech"]], "Stage 6(Optional): Export the trained model": [[76, "stage-6-optional-export-the-trained-model"]], "Stage 7(Optional): Add LM and test it with runtime": [[76, "stage-7-optional-add-lm-and-test-it-with-runtime"]]}, "indexentries": {"module": [[11, "module-wenet"], [12, "module-wenet.branchformer"], [13, "module-wenet.branchformer.cgmlp"], [14, "module-wenet.branchformer.encoder"], [15, "module-wenet.branchformer.encoder_layer"], [16, "module-wenet.cli"], [20, "module-wenet.dataset"], [24, "module-wenet.dataset.wav_distortion"], [25, "module-wenet.efficient_conformer"], [26, "module-wenet.efficient_conformer.attention"], [27, "module-wenet.efficient_conformer.convolution"], [28, "module-wenet.efficient_conformer.encoder"], [29, "module-wenet.efficient_conformer.encoder_layer"], [30, "module-wenet.efficient_conformer.subsampling"], [31, "module-wenet.squeezeformer"], [32, "module-wenet.squeezeformer.attention"], [33, "module-wenet.squeezeformer.conv2d"], [34, "module-wenet.squeezeformer.convolution"], [35, "module-wenet.squeezeformer.encoder"], [36, "module-wenet.squeezeformer.encoder_layer"], [37, "module-wenet.squeezeformer.positionwise_feed_forward"], [38, "module-wenet.squeezeformer.subsampling"], [39, "module-wenet.transducer"], [40, "module-wenet.transducer.joint"], [41, "module-wenet.transducer.predictor"], [43, "module-wenet.transformer"], [45, "module-wenet.transformer.attention"], [46, "module-wenet.transformer.cmvn"], [47, "module-wenet.transformer.convolution"], [48, "module-wenet.transformer.ctc"], [49, "module-wenet.transformer.decoder"], [50, "module-wenet.transformer.decoder_layer"], [51, "module-wenet.transformer.embedding"], [52, "module-wenet.transformer.encoder"], [53, "module-wenet.transformer.encoder_layer"], [54, "module-wenet.transformer.label_smoothing_loss"], [55, "module-wenet.transformer.positionwise_feed_forward"], [56, "module-wenet.transformer.subsampling"], [57, "module-wenet.transformer.swish"], [58, "module-wenet.utils"], [61, "module-wenet.utils.common"], [62, "module-wenet.utils.config"], [65, "module-wenet.utils.executor"], [66, "module-wenet.utils.file_utils"], [68, "module-wenet.utils.mask"], [69, "module-wenet.utils.scheduler"]], "wenet": [[11, "module-wenet"]], "wenet.branchformer": [[12, "module-wenet.branchformer"]], "convolutionalgatingmlp (class in wenet.branchformer.cgmlp)": [[13, "wenet.branchformer.cgmlp.ConvolutionalGatingMLP"]], "convolutionalspatialgatingunit (class in wenet.branchformer.cgmlp)": [[13, "wenet.branchformer.cgmlp.ConvolutionalSpatialGatingUnit"]], "espnet_initialization_fn() (wenet.branchformer.cgmlp.convolutionalspatialgatingunit method)": [[13, "wenet.branchformer.cgmlp.ConvolutionalSpatialGatingUnit.espnet_initialization_fn"]], "forward() (wenet.branchformer.cgmlp.convolutionalgatingmlp method)": [[13, "wenet.branchformer.cgmlp.ConvolutionalGatingMLP.forward"]], "forward() (wenet.branchformer.cgmlp.convolutionalspatialgatingunit method)": [[13, "wenet.branchformer.cgmlp.ConvolutionalSpatialGatingUnit.forward"]], "training (wenet.branchformer.cgmlp.convolutionalgatingmlp attribute)": [[13, "wenet.branchformer.cgmlp.ConvolutionalGatingMLP.training"]], "training (wenet.branchformer.cgmlp.convolutionalspatialgatingunit attribute)": [[13, "wenet.branchformer.cgmlp.ConvolutionalSpatialGatingUnit.training"]], "wenet.branchformer.cgmlp": [[13, "module-wenet.branchformer.cgmlp"]], "branchformerencoder (class in wenet.branchformer.encoder)": [[14, "wenet.branchformer.encoder.BranchformerEncoder"]], "forward() (wenet.branchformer.encoder.branchformerencoder method)": [[14, "wenet.branchformer.encoder.BranchformerEncoder.forward"]], "forward_chunk() (wenet.branchformer.encoder.branchformerencoder method)": [[14, "wenet.branchformer.encoder.BranchformerEncoder.forward_chunk"]], "forward_chunk_by_chunk() (wenet.branchformer.encoder.branchformerencoder method)": [[14, "wenet.branchformer.encoder.BranchformerEncoder.forward_chunk_by_chunk"]], "output_size() (wenet.branchformer.encoder.branchformerencoder method)": [[14, "wenet.branchformer.encoder.BranchformerEncoder.output_size"]], "training (wenet.branchformer.encoder.branchformerencoder attribute)": [[14, "wenet.branchformer.encoder.BranchformerEncoder.training"]], "wenet.branchformer.encoder": [[14, "module-wenet.branchformer.encoder"]], "branchformerencoderlayer (class in wenet.branchformer.encoder_layer)": [[15, "wenet.branchformer.encoder_layer.BranchformerEncoderLayer"]], "forward() (wenet.branchformer.encoder_layer.branchformerencoderlayer method)": [[15, "wenet.branchformer.encoder_layer.BranchformerEncoderLayer.forward"]], "training (wenet.branchformer.encoder_layer.branchformerencoderlayer attribute)": [[15, "wenet.branchformer.encoder_layer.BranchformerEncoderLayer.training"]], "wenet.branchformer.encoder_layer": [[15, "module-wenet.branchformer.encoder_layer"]], "wenet.cli": [[16, "module-wenet.cli"]], "wenet.dataset": [[20, "module-wenet.dataset"]], "amp2db() (in module wenet.dataset.wav_distortion)": [[24, "wenet.dataset.wav_distortion.amp2db"]], "db2amp() (in module wenet.dataset.wav_distortion)": [[24, "wenet.dataset.wav_distortion.db2amp"]], "distort() (in module wenet.dataset.wav_distortion)": [[24, "wenet.dataset.wav_distortion.distort"]], "distort_chain() (in module wenet.dataset.wav_distortion)": [[24, "wenet.dataset.wav_distortion.distort_chain"]], "distort_wav_conf() (in module wenet.dataset.wav_distortion)": [[24, "wenet.dataset.wav_distortion.distort_wav_conf"]], "distort_wav_conf_and_save() (in module wenet.dataset.wav_distortion)": [[24, "wenet.dataset.wav_distortion.distort_wav_conf_and_save"]], "generate_amp_mask() (in module wenet.dataset.wav_distortion)": [[24, "wenet.dataset.wav_distortion.generate_amp_mask"]], "make_amp_mask() (in module wenet.dataset.wav_distortion)": [[24, "wenet.dataset.wav_distortion.make_amp_mask"]], "make_fence_distortion() (in module wenet.dataset.wav_distortion)": [[24, "wenet.dataset.wav_distortion.make_fence_distortion"]], "make_gain_db() (in module wenet.dataset.wav_distortion)": [[24, "wenet.dataset.wav_distortion.make_gain_db"]], "make_jag_distortion() (in module wenet.dataset.wav_distortion)": [[24, "wenet.dataset.wav_distortion.make_jag_distortion"]], "make_max_distortion() (in module wenet.dataset.wav_distortion)": [[24, "wenet.dataset.wav_distortion.make_max_distortion"]], "make_poly_distortion() (in module wenet.dataset.wav_distortion)": [[24, "wenet.dataset.wav_distortion.make_poly_distortion"]], "make_quad_distortion() (in module wenet.dataset.wav_distortion)": [[24, "wenet.dataset.wav_distortion.make_quad_distortion"]], "wenet.dataset.wav_distortion": [[24, "module-wenet.dataset.wav_distortion"]], "wenet.efficient_conformer": [[25, "module-wenet.efficient_conformer"]], "groupedrelpositionmultiheadedattention (class in wenet.efficient_conformer.attention)": [[26, "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention"]], "forward() (wenet.efficient_conformer.attention.groupedrelpositionmultiheadedattention method)": [[26, "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention.forward"]], "forward_attention() (wenet.efficient_conformer.attention.groupedrelpositionmultiheadedattention method)": [[26, "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention.forward_attention"]], "pad4group() (wenet.efficient_conformer.attention.groupedrelpositionmultiheadedattention method)": [[26, "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention.pad4group"]], "rel_shift() (wenet.efficient_conformer.attention.groupedrelpositionmultiheadedattention method)": [[26, "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention.rel_shift"]], "training (wenet.efficient_conformer.attention.groupedrelpositionmultiheadedattention attribute)": [[26, "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention.training"]], "wenet.efficient_conformer.attention": [[26, "module-wenet.efficient_conformer.attention"]], "convolutionmodule (class in wenet.efficient_conformer.convolution)": [[27, "wenet.efficient_conformer.convolution.ConvolutionModule"]], "forward() (wenet.efficient_conformer.convolution.convolutionmodule method)": [[27, "wenet.efficient_conformer.convolution.ConvolutionModule.forward"]], "training (wenet.efficient_conformer.convolution.convolutionmodule attribute)": [[27, "wenet.efficient_conformer.convolution.ConvolutionModule.training"]], "wenet.efficient_conformer.convolution": [[27, "module-wenet.efficient_conformer.convolution"]], "efficientconformerencoder (class in wenet.efficient_conformer.encoder)": [[28, "wenet.efficient_conformer.encoder.EfficientConformerEncoder"]], "calculate_downsampling_factor() (wenet.efficient_conformer.encoder.efficientconformerencoder method)": [[28, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.calculate_downsampling_factor"]], "forward() (wenet.efficient_conformer.encoder.efficientconformerencoder method)": [[28, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.forward"]], "forward_chunk() (wenet.efficient_conformer.encoder.efficientconformerencoder method)": [[28, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.forward_chunk"]], "forward_chunk_by_chunk() (wenet.efficient_conformer.encoder.efficientconformerencoder method)": [[28, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.forward_chunk_by_chunk"]], "output_size() (wenet.efficient_conformer.encoder.efficientconformerencoder method)": [[28, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.output_size"]], "set_global_chunk_size() (wenet.efficient_conformer.encoder.efficientconformerencoder method)": [[28, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.set_global_chunk_size"]], "training (wenet.efficient_conformer.encoder.efficientconformerencoder attribute)": [[28, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.training"]], "wenet.efficient_conformer.encoder": [[28, "module-wenet.efficient_conformer.encoder"]], "strideconformerencoderlayer (class in wenet.efficient_conformer.encoder_layer)": [[29, "wenet.efficient_conformer.encoder_layer.StrideConformerEncoderLayer"]], "forward() (wenet.efficient_conformer.encoder_layer.strideconformerencoderlayer method)": [[29, "wenet.efficient_conformer.encoder_layer.StrideConformerEncoderLayer.forward"]], "training (wenet.efficient_conformer.encoder_layer.strideconformerencoderlayer attribute)": [[29, "wenet.efficient_conformer.encoder_layer.StrideConformerEncoderLayer.training"]], "wenet.efficient_conformer.encoder_layer": [[29, "module-wenet.efficient_conformer.encoder_layer"]], "conv2dsubsampling2 (class in wenet.efficient_conformer.subsampling)": [[30, "wenet.efficient_conformer.subsampling.Conv2dSubsampling2"]], "forward() (wenet.efficient_conformer.subsampling.conv2dsubsampling2 method)": [[30, "wenet.efficient_conformer.subsampling.Conv2dSubsampling2.forward"]], "training (wenet.efficient_conformer.subsampling.conv2dsubsampling2 attribute)": [[30, "wenet.efficient_conformer.subsampling.Conv2dSubsampling2.training"]], "wenet.efficient_conformer.subsampling": [[30, "module-wenet.efficient_conformer.subsampling"]], "wenet.squeezeformer": [[31, "module-wenet.squeezeformer"]], "relpositionmultiheadedattention (class in wenet.squeezeformer.attention)": [[32, "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention"]], "forward() (wenet.squeezeformer.attention.relpositionmultiheadedattention method)": [[32, "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention.forward"]], "forward_attention() (wenet.squeezeformer.attention.relpositionmultiheadedattention method)": [[32, "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention.forward_attention"]], "init_weights() (wenet.squeezeformer.attention.relpositionmultiheadedattention method)": [[32, "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention.init_weights"]], "rel_shift() (wenet.squeezeformer.attention.relpositionmultiheadedattention method)": [[32, "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention.rel_shift"]], "training (wenet.squeezeformer.attention.relpositionmultiheadedattention attribute)": [[32, "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention.training"]], "wenet.squeezeformer.attention": [[32, "module-wenet.squeezeformer.attention"]], "conv2dvalid (class in wenet.squeezeformer.conv2d)": [[33, "wenet.squeezeformer.conv2d.Conv2dValid"]], "bias (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[33, "wenet.squeezeformer.conv2d.Conv2dValid.bias"]], "dilation (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[33, "wenet.squeezeformer.conv2d.Conv2dValid.dilation"]], "forward() (wenet.squeezeformer.conv2d.conv2dvalid method)": [[33, "wenet.squeezeformer.conv2d.Conv2dValid.forward"]], "groups (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[33, "wenet.squeezeformer.conv2d.Conv2dValid.groups"]], "in_channels (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[33, "wenet.squeezeformer.conv2d.Conv2dValid.in_channels"]], "kernel_size (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[33, "wenet.squeezeformer.conv2d.Conv2dValid.kernel_size"]], "out_channels (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[33, "wenet.squeezeformer.conv2d.Conv2dValid.out_channels"]], "output_padding (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[33, "wenet.squeezeformer.conv2d.Conv2dValid.output_padding"]], "padding (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[33, "wenet.squeezeformer.conv2d.Conv2dValid.padding"]], "padding_mode (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[33, "wenet.squeezeformer.conv2d.Conv2dValid.padding_mode"]], "stride (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[33, "wenet.squeezeformer.conv2d.Conv2dValid.stride"]], "transposed (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[33, "wenet.squeezeformer.conv2d.Conv2dValid.transposed"]], "weight (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[33, "wenet.squeezeformer.conv2d.Conv2dValid.weight"]], "wenet.squeezeformer.conv2d": [[33, "module-wenet.squeezeformer.conv2d"]], "convolutionmodule (class in wenet.squeezeformer.convolution)": [[34, "wenet.squeezeformer.convolution.ConvolutionModule"]], "forward() (wenet.squeezeformer.convolution.convolutionmodule method)": [[34, "wenet.squeezeformer.convolution.ConvolutionModule.forward"]], "init_weights() (wenet.squeezeformer.convolution.convolutionmodule method)": [[34, "wenet.squeezeformer.convolution.ConvolutionModule.init_weights"]], "training (wenet.squeezeformer.convolution.convolutionmodule attribute)": [[34, "wenet.squeezeformer.convolution.ConvolutionModule.training"]], "wenet.squeezeformer.convolution": [[34, "module-wenet.squeezeformer.convolution"]], "squeezeformerencoder (class in wenet.squeezeformer.encoder)": [[35, "wenet.squeezeformer.encoder.SqueezeformerEncoder"]], "calculate_downsampling_factor() (wenet.squeezeformer.encoder.squeezeformerencoder method)": [[35, "wenet.squeezeformer.encoder.SqueezeformerEncoder.calculate_downsampling_factor"]], "check_ascending_list() (wenet.squeezeformer.encoder.squeezeformerencoder method)": [[35, "wenet.squeezeformer.encoder.SqueezeformerEncoder.check_ascending_list"]], "forward() (wenet.squeezeformer.encoder.squeezeformerencoder method)": [[35, "wenet.squeezeformer.encoder.SqueezeformerEncoder.forward"]], "forward_chunk() (wenet.squeezeformer.encoder.squeezeformerencoder method)": [[35, "wenet.squeezeformer.encoder.SqueezeformerEncoder.forward_chunk"]], "forward_chunk_by_chunk() (wenet.squeezeformer.encoder.squeezeformerencoder method)": [[35, "wenet.squeezeformer.encoder.SqueezeformerEncoder.forward_chunk_by_chunk"]], "output_size() (wenet.squeezeformer.encoder.squeezeformerencoder method)": [[35, "wenet.squeezeformer.encoder.SqueezeformerEncoder.output_size"]], "training (wenet.squeezeformer.encoder.squeezeformerencoder attribute)": [[35, "wenet.squeezeformer.encoder.SqueezeformerEncoder.training"]], "wenet.squeezeformer.encoder": [[35, "module-wenet.squeezeformer.encoder"]], "squeezeformerencoderlayer (class in wenet.squeezeformer.encoder_layer)": [[36, "wenet.squeezeformer.encoder_layer.SqueezeformerEncoderLayer"]], "forward() (wenet.squeezeformer.encoder_layer.squeezeformerencoderlayer method)": [[36, "wenet.squeezeformer.encoder_layer.SqueezeformerEncoderLayer.forward"]], "training (wenet.squeezeformer.encoder_layer.squeezeformerencoderlayer attribute)": [[36, "wenet.squeezeformer.encoder_layer.SqueezeformerEncoderLayer.training"]], "wenet.squeezeformer.encoder_layer": [[36, "module-wenet.squeezeformer.encoder_layer"]], "positionwisefeedforward (class in wenet.squeezeformer.positionwise_feed_forward)": [[37, "wenet.squeezeformer.positionwise_feed_forward.PositionwiseFeedForward"]], "forward() (wenet.squeezeformer.positionwise_feed_forward.positionwisefeedforward method)": [[37, "wenet.squeezeformer.positionwise_feed_forward.PositionwiseFeedForward.forward"]], "init_weights() (wenet.squeezeformer.positionwise_feed_forward.positionwisefeedforward method)": [[37, "wenet.squeezeformer.positionwise_feed_forward.PositionwiseFeedForward.init_weights"]], "training (wenet.squeezeformer.positionwise_feed_forward.positionwisefeedforward attribute)": [[37, "wenet.squeezeformer.positionwise_feed_forward.PositionwiseFeedForward.training"]], "wenet.squeezeformer.positionwise_feed_forward": [[37, "module-wenet.squeezeformer.positionwise_feed_forward"]], "depthwiseconv2dsubsampling4 (class in wenet.squeezeformer.subsampling)": [[38, "wenet.squeezeformer.subsampling.DepthwiseConv2dSubsampling4"]], "timereductionlayer1d (class in wenet.squeezeformer.subsampling)": [[38, "wenet.squeezeformer.subsampling.TimeReductionLayer1D"]], "timereductionlayer2d (class in wenet.squeezeformer.subsampling)": [[38, "wenet.squeezeformer.subsampling.TimeReductionLayer2D"]], "timereductionlayerstream (class in wenet.squeezeformer.subsampling)": [[38, "wenet.squeezeformer.subsampling.TimeReductionLayerStream"]], "forward() (wenet.squeezeformer.subsampling.depthwiseconv2dsubsampling4 method)": [[38, "wenet.squeezeformer.subsampling.DepthwiseConv2dSubsampling4.forward"]], "forward() (wenet.squeezeformer.subsampling.timereductionlayer1d method)": [[38, "wenet.squeezeformer.subsampling.TimeReductionLayer1D.forward"]], "forward() (wenet.squeezeformer.subsampling.timereductionlayer2d method)": [[38, "wenet.squeezeformer.subsampling.TimeReductionLayer2D.forward"]], "forward() (wenet.squeezeformer.subsampling.timereductionlayerstream method)": [[38, "wenet.squeezeformer.subsampling.TimeReductionLayerStream.forward"]], "init_weights() (wenet.squeezeformer.subsampling.timereductionlayer1d method)": [[38, "wenet.squeezeformer.subsampling.TimeReductionLayer1D.init_weights"]], "init_weights() (wenet.squeezeformer.subsampling.timereductionlayer2d method)": [[38, "wenet.squeezeformer.subsampling.TimeReductionLayer2D.init_weights"]], "init_weights() (wenet.squeezeformer.subsampling.timereductionlayerstream method)": [[38, "wenet.squeezeformer.subsampling.TimeReductionLayerStream.init_weights"]], "training (wenet.squeezeformer.subsampling.depthwiseconv2dsubsampling4 attribute)": [[38, "wenet.squeezeformer.subsampling.DepthwiseConv2dSubsampling4.training"]], "training (wenet.squeezeformer.subsampling.timereductionlayer1d attribute)": [[38, "wenet.squeezeformer.subsampling.TimeReductionLayer1D.training"]], "training (wenet.squeezeformer.subsampling.timereductionlayer2d attribute)": [[38, "wenet.squeezeformer.subsampling.TimeReductionLayer2D.training"]], "training (wenet.squeezeformer.subsampling.timereductionlayerstream attribute)": [[38, "wenet.squeezeformer.subsampling.TimeReductionLayerStream.training"]], "wenet.squeezeformer.subsampling": [[38, "module-wenet.squeezeformer.subsampling"]], "wenet.transducer": [[39, "module-wenet.transducer"]], "transducerjoint (class in wenet.transducer.joint)": [[40, "wenet.transducer.joint.TransducerJoint"]], "forward() (wenet.transducer.joint.transducerjoint method)": [[40, "wenet.transducer.joint.TransducerJoint.forward"]], "training (wenet.transducer.joint.transducerjoint attribute)": [[40, "wenet.transducer.joint.TransducerJoint.training"]], "wenet.transducer.joint": [[40, "module-wenet.transducer.joint"]], "applypadding() (in module wenet.transducer.predictor)": [[41, "wenet.transducer.predictor.ApplyPadding"]], "convpredictor (class in wenet.transducer.predictor)": [[41, "wenet.transducer.predictor.ConvPredictor"]], "embeddingpredictor (class in wenet.transducer.predictor)": [[41, "wenet.transducer.predictor.EmbeddingPredictor"]], "predictorbase (class in wenet.transducer.predictor)": [[41, "wenet.transducer.predictor.PredictorBase"]], "rnnpredictor (class in wenet.transducer.predictor)": [[41, "wenet.transducer.predictor.RNNPredictor"]], "batch_to_cache() (wenet.transducer.predictor.convpredictor method)": [[41, "wenet.transducer.predictor.ConvPredictor.batch_to_cache"]], "batch_to_cache() (wenet.transducer.predictor.embeddingpredictor method)": [[41, "wenet.transducer.predictor.EmbeddingPredictor.batch_to_cache"]], "batch_to_cache() (wenet.transducer.predictor.predictorbase method)": [[41, "wenet.transducer.predictor.PredictorBase.batch_to_cache"]], "batch_to_cache() (wenet.transducer.predictor.rnnpredictor method)": [[41, "wenet.transducer.predictor.RNNPredictor.batch_to_cache"]], "cache_to_batch() (wenet.transducer.predictor.convpredictor method)": [[41, "wenet.transducer.predictor.ConvPredictor.cache_to_batch"]], "cache_to_batch() (wenet.transducer.predictor.embeddingpredictor method)": [[41, "wenet.transducer.predictor.EmbeddingPredictor.cache_to_batch"]], "cache_to_batch() (wenet.transducer.predictor.predictorbase method)": [[41, "wenet.transducer.predictor.PredictorBase.cache_to_batch"]], "cache_to_batch() (wenet.transducer.predictor.rnnpredictor method)": [[41, "wenet.transducer.predictor.RNNPredictor.cache_to_batch"]], "forward() (wenet.transducer.predictor.convpredictor method)": [[41, "wenet.transducer.predictor.ConvPredictor.forward"]], "forward() (wenet.transducer.predictor.embeddingpredictor method)": [[41, "wenet.transducer.predictor.EmbeddingPredictor.forward"]], "forward() (wenet.transducer.predictor.predictorbase method)": [[41, "wenet.transducer.predictor.PredictorBase.forward"]], "forward() (wenet.transducer.predictor.rnnpredictor method)": [[41, "wenet.transducer.predictor.RNNPredictor.forward"]], "forward_step() (wenet.transducer.predictor.convpredictor method)": [[41, "wenet.transducer.predictor.ConvPredictor.forward_step"]], "forward_step() (wenet.transducer.predictor.embeddingpredictor method)": [[41, "wenet.transducer.predictor.EmbeddingPredictor.forward_step"]], "forward_step() (wenet.transducer.predictor.predictorbase method)": [[41, "wenet.transducer.predictor.PredictorBase.forward_step"]], "forward_step() (wenet.transducer.predictor.rnnpredictor method)": [[41, "wenet.transducer.predictor.RNNPredictor.forward_step"]], "init_state() (wenet.transducer.predictor.convpredictor method)": [[41, "wenet.transducer.predictor.ConvPredictor.init_state"]], "init_state() (wenet.transducer.predictor.embeddingpredictor method)": [[41, "wenet.transducer.predictor.EmbeddingPredictor.init_state"]], "init_state() (wenet.transducer.predictor.predictorbase method)": [[41, "wenet.transducer.predictor.PredictorBase.init_state"]], "init_state() (wenet.transducer.predictor.rnnpredictor method)": [[41, "wenet.transducer.predictor.RNNPredictor.init_state"]], "output_size() (wenet.transducer.predictor.convpredictor method)": [[41, "wenet.transducer.predictor.ConvPredictor.output_size"]], "output_size() (wenet.transducer.predictor.embeddingpredictor method)": [[41, "wenet.transducer.predictor.EmbeddingPredictor.output_size"]], "output_size() (wenet.transducer.predictor.predictorbase method)": [[41, "wenet.transducer.predictor.PredictorBase.output_size"]], "output_size() (wenet.transducer.predictor.rnnpredictor method)": [[41, "wenet.transducer.predictor.RNNPredictor.output_size"]], "training (wenet.transducer.predictor.convpredictor attribute)": [[41, "wenet.transducer.predictor.ConvPredictor.training"]], "training (wenet.transducer.predictor.embeddingpredictor attribute)": [[41, "wenet.transducer.predictor.EmbeddingPredictor.training"]], "training (wenet.transducer.predictor.predictorbase attribute)": [[41, "wenet.transducer.predictor.PredictorBase.training"]], "training (wenet.transducer.predictor.rnnpredictor attribute)": [[41, "wenet.transducer.predictor.RNNPredictor.training"]], "wenet.transducer.predictor": [[41, "module-wenet.transducer.predictor"]], "wenet.transformer": [[43, "module-wenet.transformer"]], "multiheadedattention (class in wenet.transformer.attention)": [[45, "wenet.transformer.attention.MultiHeadedAttention"]], "relpositionmultiheadedattention (class in wenet.transformer.attention)": [[45, "wenet.transformer.attention.RelPositionMultiHeadedAttention"]], "forward() (wenet.transformer.attention.multiheadedattention method)": [[45, "wenet.transformer.attention.MultiHeadedAttention.forward"]], "forward() (wenet.transformer.attention.relpositionmultiheadedattention method)": [[45, "wenet.transformer.attention.RelPositionMultiHeadedAttention.forward"]], "forward_attention() (wenet.transformer.attention.multiheadedattention method)": [[45, "wenet.transformer.attention.MultiHeadedAttention.forward_attention"]], "forward_qkv() (wenet.transformer.attention.multiheadedattention method)": [[45, "wenet.transformer.attention.MultiHeadedAttention.forward_qkv"]], "rel_shift() (wenet.transformer.attention.relpositionmultiheadedattention method)": [[45, "wenet.transformer.attention.RelPositionMultiHeadedAttention.rel_shift"]], "training (wenet.transformer.attention.multiheadedattention attribute)": [[45, "wenet.transformer.attention.MultiHeadedAttention.training"]], "training (wenet.transformer.attention.relpositionmultiheadedattention attribute)": [[45, "wenet.transformer.attention.RelPositionMultiHeadedAttention.training"]], "wenet.transformer.attention": [[45, "module-wenet.transformer.attention"]], "globalcmvn (class in wenet.transformer.cmvn)": [[46, "wenet.transformer.cmvn.GlobalCMVN"]], "forward() (wenet.transformer.cmvn.globalcmvn method)": [[46, "wenet.transformer.cmvn.GlobalCMVN.forward"]], "training (wenet.transformer.cmvn.globalcmvn attribute)": [[46, "wenet.transformer.cmvn.GlobalCMVN.training"]], "wenet.transformer.cmvn": [[46, "module-wenet.transformer.cmvn"]], "convolutionmodule (class in wenet.transformer.convolution)": [[47, "wenet.transformer.convolution.ConvolutionModule"]], "forward() (wenet.transformer.convolution.convolutionmodule method)": [[47, "wenet.transformer.convolution.ConvolutionModule.forward"]], "training (wenet.transformer.convolution.convolutionmodule attribute)": [[47, "wenet.transformer.convolution.ConvolutionModule.training"]], "wenet.transformer.convolution": [[47, "module-wenet.transformer.convolution"]], "ctc (class in wenet.transformer.ctc)": [[48, "wenet.transformer.ctc.CTC"]], "argmax() (wenet.transformer.ctc.ctc method)": [[48, "wenet.transformer.ctc.CTC.argmax"]], "forward() (wenet.transformer.ctc.ctc method)": [[48, "wenet.transformer.ctc.CTC.forward"]], "log_softmax() (wenet.transformer.ctc.ctc method)": [[48, "wenet.transformer.ctc.CTC.log_softmax"]], "training (wenet.transformer.ctc.ctc attribute)": [[48, "wenet.transformer.ctc.CTC.training"]], "wenet.transformer.ctc": [[48, "module-wenet.transformer.ctc"]], "bitransformerdecoder (class in wenet.transformer.decoder)": [[49, "wenet.transformer.decoder.BiTransformerDecoder"]], "transformerdecoder (class in wenet.transformer.decoder)": [[49, "wenet.transformer.decoder.TransformerDecoder"]], "forward() (wenet.transformer.decoder.bitransformerdecoder method)": [[49, "wenet.transformer.decoder.BiTransformerDecoder.forward"]], "forward() (wenet.transformer.decoder.transformerdecoder method)": [[49, "wenet.transformer.decoder.TransformerDecoder.forward"]], "forward_one_step() (wenet.transformer.decoder.bitransformerdecoder method)": [[49, "wenet.transformer.decoder.BiTransformerDecoder.forward_one_step"]], "forward_one_step() (wenet.transformer.decoder.transformerdecoder method)": [[49, "wenet.transformer.decoder.TransformerDecoder.forward_one_step"]], "training (wenet.transformer.decoder.bitransformerdecoder attribute)": [[49, "wenet.transformer.decoder.BiTransformerDecoder.training"]], "training (wenet.transformer.decoder.transformerdecoder attribute)": [[49, "wenet.transformer.decoder.TransformerDecoder.training"]], "wenet.transformer.decoder": [[49, "module-wenet.transformer.decoder"]], "decoderlayer (class in wenet.transformer.decoder_layer)": [[50, "wenet.transformer.decoder_layer.DecoderLayer"]], "forward() (wenet.transformer.decoder_layer.decoderlayer method)": [[50, "wenet.transformer.decoder_layer.DecoderLayer.forward"]], "training (wenet.transformer.decoder_layer.decoderlayer attribute)": [[50, "wenet.transformer.decoder_layer.DecoderLayer.training"]], "wenet.transformer.decoder_layer": [[50, "module-wenet.transformer.decoder_layer"]], "nopositionalencoding (class in wenet.transformer.embedding)": [[51, "wenet.transformer.embedding.NoPositionalEncoding"]], "positionalencoding (class in wenet.transformer.embedding)": [[51, "wenet.transformer.embedding.PositionalEncoding"]], "relpositionalencoding (class in wenet.transformer.embedding)": [[51, "wenet.transformer.embedding.RelPositionalEncoding"]], "forward() (wenet.transformer.embedding.nopositionalencoding method)": [[51, "wenet.transformer.embedding.NoPositionalEncoding.forward"]], "forward() (wenet.transformer.embedding.positionalencoding method)": [[51, "wenet.transformer.embedding.PositionalEncoding.forward"]], "forward() (wenet.transformer.embedding.relpositionalencoding method)": [[51, "wenet.transformer.embedding.RelPositionalEncoding.forward"]], "position_encoding() (wenet.transformer.embedding.nopositionalencoding method)": [[51, "wenet.transformer.embedding.NoPositionalEncoding.position_encoding"]], "position_encoding() (wenet.transformer.embedding.positionalencoding method)": [[51, "wenet.transformer.embedding.PositionalEncoding.position_encoding"]], "training (wenet.transformer.embedding.nopositionalencoding attribute)": [[51, "wenet.transformer.embedding.NoPositionalEncoding.training"]], "training (wenet.transformer.embedding.positionalencoding attribute)": [[51, "wenet.transformer.embedding.PositionalEncoding.training"]], "training (wenet.transformer.embedding.relpositionalencoding attribute)": [[51, "wenet.transformer.embedding.RelPositionalEncoding.training"]], "wenet.transformer.embedding": [[51, "module-wenet.transformer.embedding"]], "baseencoder (class in wenet.transformer.encoder)": [[52, "wenet.transformer.encoder.BaseEncoder"]], "conformerencoder (class in wenet.transformer.encoder)": [[52, "wenet.transformer.encoder.ConformerEncoder"]], "transformerencoder (class in wenet.transformer.encoder)": [[52, "wenet.transformer.encoder.TransformerEncoder"]], "forward() (wenet.transformer.encoder.baseencoder method)": [[52, "wenet.transformer.encoder.BaseEncoder.forward"]], "forward_chunk() (wenet.transformer.encoder.baseencoder method)": [[52, "wenet.transformer.encoder.BaseEncoder.forward_chunk"]], "forward_chunk_by_chunk() (wenet.transformer.encoder.baseencoder method)": [[52, "wenet.transformer.encoder.BaseEncoder.forward_chunk_by_chunk"]], "output_size() (wenet.transformer.encoder.baseencoder method)": [[52, "wenet.transformer.encoder.BaseEncoder.output_size"]], "training (wenet.transformer.encoder.baseencoder attribute)": [[52, "wenet.transformer.encoder.BaseEncoder.training"]], "training (wenet.transformer.encoder.conformerencoder attribute)": [[52, "wenet.transformer.encoder.ConformerEncoder.training"]], "training (wenet.transformer.encoder.transformerencoder attribute)": [[52, "wenet.transformer.encoder.TransformerEncoder.training"]], "wenet.transformer.encoder": [[52, "module-wenet.transformer.encoder"]], "conformerencoderlayer (class in wenet.transformer.encoder_layer)": [[53, "wenet.transformer.encoder_layer.ConformerEncoderLayer"]], "transformerencoderlayer (class in wenet.transformer.encoder_layer)": [[53, "wenet.transformer.encoder_layer.TransformerEncoderLayer"]], "forward() (wenet.transformer.encoder_layer.conformerencoderlayer method)": [[53, "wenet.transformer.encoder_layer.ConformerEncoderLayer.forward"]], "forward() (wenet.transformer.encoder_layer.transformerencoderlayer method)": [[53, "wenet.transformer.encoder_layer.TransformerEncoderLayer.forward"]], "training (wenet.transformer.encoder_layer.conformerencoderlayer attribute)": [[53, "wenet.transformer.encoder_layer.ConformerEncoderLayer.training"]], "training (wenet.transformer.encoder_layer.transformerencoderlayer attribute)": [[53, "wenet.transformer.encoder_layer.TransformerEncoderLayer.training"]], "wenet.transformer.encoder_layer": [[53, "module-wenet.transformer.encoder_layer"]], "labelsmoothingloss (class in wenet.transformer.label_smoothing_loss)": [[54, "wenet.transformer.label_smoothing_loss.LabelSmoothingLoss"]], "forward() (wenet.transformer.label_smoothing_loss.labelsmoothingloss method)": [[54, "wenet.transformer.label_smoothing_loss.LabelSmoothingLoss.forward"]], "training (wenet.transformer.label_smoothing_loss.labelsmoothingloss attribute)": [[54, "wenet.transformer.label_smoothing_loss.LabelSmoothingLoss.training"]], "wenet.transformer.label_smoothing_loss": [[54, "module-wenet.transformer.label_smoothing_loss"]], "positionwisefeedforward (class in wenet.transformer.positionwise_feed_forward)": [[55, "wenet.transformer.positionwise_feed_forward.PositionwiseFeedForward"]], "forward() (wenet.transformer.positionwise_feed_forward.positionwisefeedforward method)": [[55, "wenet.transformer.positionwise_feed_forward.PositionwiseFeedForward.forward"]], "training (wenet.transformer.positionwise_feed_forward.positionwisefeedforward attribute)": [[55, "wenet.transformer.positionwise_feed_forward.PositionwiseFeedForward.training"]], "wenet.transformer.positionwise_feed_forward": [[55, "module-wenet.transformer.positionwise_feed_forward"]], "basesubsampling (class in wenet.transformer.subsampling)": [[56, "wenet.transformer.subsampling.BaseSubsampling"]], "conv2dsubsampling4 (class in wenet.transformer.subsampling)": [[56, "wenet.transformer.subsampling.Conv2dSubsampling4"]], "conv2dsubsampling6 (class in wenet.transformer.subsampling)": [[56, "wenet.transformer.subsampling.Conv2dSubsampling6"]], "conv2dsubsampling8 (class in wenet.transformer.subsampling)": [[56, "wenet.transformer.subsampling.Conv2dSubsampling8"]], "embedinignosubsampling (class in wenet.transformer.subsampling)": [[56, "wenet.transformer.subsampling.EmbedinigNoSubsampling"]], "linearnosubsampling (class in wenet.transformer.subsampling)": [[56, "wenet.transformer.subsampling.LinearNoSubsampling"]], "forward() (wenet.transformer.subsampling.conv2dsubsampling4 method)": [[56, "wenet.transformer.subsampling.Conv2dSubsampling4.forward"]], "forward() (wenet.transformer.subsampling.conv2dsubsampling6 method)": [[56, "wenet.transformer.subsampling.Conv2dSubsampling6.forward"]], "forward() (wenet.transformer.subsampling.conv2dsubsampling8 method)": [[56, "wenet.transformer.subsampling.Conv2dSubsampling8.forward"]], "forward() (wenet.transformer.subsampling.embedinignosubsampling method)": [[56, "wenet.transformer.subsampling.EmbedinigNoSubsampling.forward"]], "forward() (wenet.transformer.subsampling.linearnosubsampling method)": [[56, "wenet.transformer.subsampling.LinearNoSubsampling.forward"]], "position_encoding() (wenet.transformer.subsampling.basesubsampling method)": [[56, "wenet.transformer.subsampling.BaseSubsampling.position_encoding"]], "training (wenet.transformer.subsampling.basesubsampling attribute)": [[56, "wenet.transformer.subsampling.BaseSubsampling.training"]], "training (wenet.transformer.subsampling.conv2dsubsampling4 attribute)": [[56, "wenet.transformer.subsampling.Conv2dSubsampling4.training"]], "training (wenet.transformer.subsampling.conv2dsubsampling6 attribute)": [[56, "wenet.transformer.subsampling.Conv2dSubsampling6.training"]], "training (wenet.transformer.subsampling.conv2dsubsampling8 attribute)": [[56, "wenet.transformer.subsampling.Conv2dSubsampling8.training"]], "training (wenet.transformer.subsampling.embedinignosubsampling attribute)": [[56, "wenet.transformer.subsampling.EmbedinigNoSubsampling.training"]], "training (wenet.transformer.subsampling.linearnosubsampling attribute)": [[56, "wenet.transformer.subsampling.LinearNoSubsampling.training"]], "wenet.transformer.subsampling": [[56, "module-wenet.transformer.subsampling"]], "swish (class in wenet.transformer.swish)": [[57, "wenet.transformer.swish.Swish"]], "forward() (wenet.transformer.swish.swish method)": [[57, "wenet.transformer.swish.Swish.forward"]], "training (wenet.transformer.swish.swish attribute)": [[57, "wenet.transformer.swish.Swish.training"]], "wenet.transformer.swish": [[57, "module-wenet.transformer.swish"]], "wenet.utils": [[58, "module-wenet.utils"]], "add_blank() (in module wenet.utils.common)": [[61, "wenet.utils.common.add_blank"]], "add_sos_eos() (in module wenet.utils.common)": [[61, "wenet.utils.common.add_sos_eos"]], "get_activation() (in module wenet.utils.common)": [[61, "wenet.utils.common.get_activation"]], "get_rnn() (in module wenet.utils.common)": [[61, "wenet.utils.common.get_rnn"]], "get_subsample() (in module wenet.utils.common)": [[61, "wenet.utils.common.get_subsample"]], "log_add() (in module wenet.utils.common)": [[61, "wenet.utils.common.log_add"]], "pad_list() (in module wenet.utils.common)": [[61, "wenet.utils.common.pad_list"]], "remove_duplicates_and_blank() (in module wenet.utils.common)": [[61, "wenet.utils.common.remove_duplicates_and_blank"]], "replace_duplicates_with_blank() (in module wenet.utils.common)": [[61, "wenet.utils.common.replace_duplicates_with_blank"]], "reverse_pad_list() (in module wenet.utils.common)": [[61, "wenet.utils.common.reverse_pad_list"]], "th_accuracy() (in module wenet.utils.common)": [[61, "wenet.utils.common.th_accuracy"]], "wenet.utils.common": [[61, "module-wenet.utils.common"]], "override_config() (in module wenet.utils.config)": [[62, "wenet.utils.config.override_config"]], "wenet.utils.config": [[62, "module-wenet.utils.config"]], "executor (class in wenet.utils.executor)": [[65, "wenet.utils.executor.Executor"]], "cv() (wenet.utils.executor.executor method)": [[65, "wenet.utils.executor.Executor.cv"]], "train() (wenet.utils.executor.executor method)": [[65, "wenet.utils.executor.Executor.train"]], "wenet.utils.executor": [[65, "module-wenet.utils.executor"]], "read_lists() (in module wenet.utils.file_utils)": [[66, "wenet.utils.file_utils.read_lists"]], "read_non_lang_symbols() (in module wenet.utils.file_utils)": [[66, "wenet.utils.file_utils.read_non_lang_symbols"]], "read_symbol_table() (in module wenet.utils.file_utils)": [[66, "wenet.utils.file_utils.read_symbol_table"]], "wenet.utils.file_utils": [[66, "module-wenet.utils.file_utils"]], "add_optional_chunk_mask() (in module wenet.utils.mask)": [[68, "wenet.utils.mask.add_optional_chunk_mask"]], "causal_or_lookahead_mask() (in module wenet.utils.mask)": [[68, "wenet.utils.mask.causal_or_lookahead_mask"]], "make_non_pad_mask() (in module wenet.utils.mask)": [[68, "wenet.utils.mask.make_non_pad_mask"]], "make_pad_mask() (in module wenet.utils.mask)": [[68, "wenet.utils.mask.make_pad_mask"]], "mask_finished_preds() (in module wenet.utils.mask)": [[68, "wenet.utils.mask.mask_finished_preds"]], "mask_finished_scores() (in module wenet.utils.mask)": [[68, "wenet.utils.mask.mask_finished_scores"]], "subsequent_chunk_mask() (in module wenet.utils.mask)": [[68, "wenet.utils.mask.subsequent_chunk_mask"]], "subsequent_mask() (in module wenet.utils.mask)": [[68, "wenet.utils.mask.subsequent_mask"]], "wenet.utils.mask": [[68, "module-wenet.utils.mask"]], "cosineannealing (class in wenet.utils.scheduler)": [[69, "wenet.utils.scheduler.CosineAnnealing"]], "noamannealing (class in wenet.utils.scheduler)": [[69, "wenet.utils.scheduler.NoamAnnealing"]], "noamholdannealing (class in wenet.utils.scheduler)": [[69, "wenet.utils.scheduler.NoamHoldAnnealing"]], "squareannealing (class in wenet.utils.scheduler)": [[69, "wenet.utils.scheduler.SquareAnnealing"]], "squarerootannealing (class in wenet.utils.scheduler)": [[69, "wenet.utils.scheduler.SquareRootAnnealing"]], "squarerootconstantpolicy (class in wenet.utils.scheduler)": [[69, "wenet.utils.scheduler.SquareRootConstantPolicy"]], "warmupannealholdpolicy (class in wenet.utils.scheduler)": [[69, "wenet.utils.scheduler.WarmupAnnealHoldPolicy"]], "warmupholdpolicy (class in wenet.utils.scheduler)": [[69, "wenet.utils.scheduler.WarmupHoldPolicy"]], "warmuplr (class in wenet.utils.scheduler)": [[69, "wenet.utils.scheduler.WarmupLR"]], "warmuppolicy (class in wenet.utils.scheduler)": [[69, "wenet.utils.scheduler.WarmupPolicy"]], "get_lr() (wenet.utils.scheduler.noamannealing method)": [[69, "wenet.utils.scheduler.NoamAnnealing.get_lr"]], "get_lr() (wenet.utils.scheduler.squarerootconstantpolicy method)": [[69, "wenet.utils.scheduler.SquareRootConstantPolicy.get_lr"]], "get_lr() (wenet.utils.scheduler.warmupannealholdpolicy method)": [[69, "wenet.utils.scheduler.WarmupAnnealHoldPolicy.get_lr"]], "get_lr() (wenet.utils.scheduler.warmupholdpolicy method)": [[69, "wenet.utils.scheduler.WarmupHoldPolicy.get_lr"]], "get_lr() (wenet.utils.scheduler.warmuplr method)": [[69, "wenet.utils.scheduler.WarmupLR.get_lr"]], "get_lr() (wenet.utils.scheduler.warmuppolicy method)": [[69, "wenet.utils.scheduler.WarmupPolicy.get_lr"]], "set_step() (wenet.utils.scheduler.noamholdannealing method)": [[69, "wenet.utils.scheduler.NoamHoldAnnealing.set_step"]], "set_step() (wenet.utils.scheduler.warmuplr method)": [[69, "wenet.utils.scheduler.WarmupLR.set_step"]], "wenet.utils.scheduler": [[69, "module-wenet.utils.scheduler"]]}})